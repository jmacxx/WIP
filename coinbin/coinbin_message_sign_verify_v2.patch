From cd82356d006ad952d568f81a301470da4e0e7863 Mon Sep 17 00:00:00 2001
From: Wowee0 <47253594+Wowee0@users.noreply.github.com>
Date: Thu, 31 Oct 2019 10:18:38 -0500
Subject: [PATCH 01/16] sync (#7)

* allow backend API choice between blockcypher/blockchair/chain.so

* bugfix for blockcypher when address used that has no UTXO

* fix issue where empty broadcast did not handle the error response appropriately

* update sha1sum file

* removed debugger code
---
 index.html    |  18 ++++-
 js/coinbin.js | 199 +++++++++++++++++++++++++++++++-------------------
 sha1sum       |   6 +-
 3 files changed, 142 insertions(+), 81 deletions(-)

diff --git a/index.html b/index.html
index f42d700d..d0df43e3 100644
--- a/index.html
+++ b/index.html
@@ -1353,8 +1353,8 @@ <h2>Settings <small> making coinb.in even better!</small></h2>
 								<p class="text-muted">Select which network you'd like to use for key pair generation.</p>
 								<select class="form-control" id="coinjs_coin">
 									<option value="bitcoin_mainnet" rel="0x00;0x80;0x05;0x488b21e;0x488ade4;coinb.in;coinb.in">Bitcoin (mainnet)</option>
-									<option value="litecoin_mainnet" rel="0x30;0xb0;0x32;0x019da462;0x019d9cfe;chain.so_litecoin;chain.so_litecoin">Litecoin (mainnet)</option>
-									<option value="dogecoin_mainnet" rel="0x1e;0x9e;0x16;0x0827421e;0x089944e4;chain.so_dogecoin;chain.so_dogecoin">Dogecoin (mainnet)</option>
+									<option value="litecoin_mainnet" rel="0x30;0xb0;0x32;0x019da462;0x019d9cfe;blockcypher_litecoin;blockcypher_litecoin">Litecoin (mainnet)</option>
+									<option value="dogecoin_mainnet" rel="0x1e;0x9e;0x16;0x0827421e;0x089944e4;blockcypher_dogecoin;blockcypher_dogecoin">Dogecoin (mainnet)</option>
 									<option value="carboncoin_mainnet" rel="0x2f;0xaf;0x05;0x488b21e;0x488ade4;cryptoid.info_carboncoin;cryptoid.info_carboncoin">Carboncoin (mainnet)</option>
 									<option value="shadowcash_mainnet" rel="0x3f;0xbf;0x7d;0xee80286a;0xee8031e8;false;false">ShadowCash (mainnet)</option>
 									<option value="bitcoin_testnet" rel="0x6f;0xef;0xc4;0x043587cf;0x04358394;false;false">Bitcoin (testnet)</option>
@@ -1411,8 +1411,13 @@ <h2>Settings <small> making coinb.in even better!</small></h2>
 								<p class="text-muted">Select the network you wish to broadcast the transaction via</p>
 								<select class="form-control" id="coinjs_broadcast">
 									<option value="coinb.in">coinb.in (Bitcoin mainnet)</option>
-									<option value="chain.so_bitcoinmainnet"> Chain.so (Bitcoin mainnet)</option>
 									<option value="blockcypher_bitcoinmainnet"> Blockcypher.com (Bitcoin mainnet)</option>
+									<option value="blockcypher_litecoin"> Blockcypher.com (Litecoin)</option>
+									<option value="blockcypher_dogecoin"> Blockcypher.com (Dogecoin)</option>
+									<option value="blockchair_bitcoinmainnet"> Blockchair.com (Bitcoin mainnet)</option>
+									<option value="blockchair_litecoin"> Blockchair.com (Litecoin)</option>
+									<option value="blockchair_dogecoin"> Blockchair.com (Dogecoin)</option>
+									<option value="chain.so_bitcoinmainnet"> Chain.so (Bitcoin mainnet)</option>
 									<option value="chain.so_litecoin"> Chain.so (Litecoin)</option>
 									<option value="chain.so_dogecoin"> Chain.so (Dogecoin)</option>
 									<option value="cryptoid.info_carboncoin"> Cryptoid.info (Carboncoin)</option>
@@ -1428,6 +1433,13 @@ <h2>Settings <small> making coinb.in even better!</small></h2>
 								<p class="text-muted">Select the network you wish to retreive your unspent inputs from</p>
 								<select class="form-control" id="coinjs_utxo">
 									<option value="coinb.in">coinb.in (Bitcoin mainnet)</option>
+									<option value="blockcypher_bitcoinmainnet"> Blockcypher.com (Bitcoin mainnet)</option>
+									<option value="blockcypher_litecoin"> Blockcypher.com (Litecoin)</option>
+									<option value="blockcypher_dogecoin"> Blockcypher.com (Dogecoin)</option>
+									<option value="blockchair_bitcoinmainnet"> Blockchair.com (Bitcoin mainnet)</option>
+									<option value="blockchair_litecoin"> Blockchair.com (Litecoin)</option>
+									<option value="blockchair_dogecoin"> Blockchair.com (Dogecoin)</option>
+									<option value="chain.so_bitcoinmainnet"> Chain.so (Bitcoin mainnet)</option>
 									<option value="chain.so_litecoin"> Chain.so (Litecoin)</option>
 									<option value="chain.so_dogecoin"> Chain.so (Dogecoin)</option>
 									<option value="cryptoid.info_carboncoin"> Cryptoid.info (Carboncoin)</option>
diff --git a/js/coinbin.js b/js/coinbin.js
index 759ddd0a..6a42fdda 100644
--- a/js/coinbin.js
+++ b/js/coinbin.js
@@ -907,10 +907,32 @@ $(document).ready(function() {
 
 		var host = $(this).attr('rel');
 
-		if(host=='chain.so_litecoin'){
-			listUnspentChainso_Litecoin(redeem);
+        // api:             blockcypher     blockchair      chain.so
+        // network name     "btc"           "bitcoin"       "BTC"
+        // network name     "ltc"           "litecoin"      "LTC"
+        // network name     "doge"          "dogecoin"      "DOGE"
+
+		if(host=='chain.so_bitcoinmainnet'){
+			listUnspentChainso(redeem, "BTC");
+        } else if(host=='chain.so_litecoin'){
+			listUnspentChainso(redeem, "LTC");
 		} else if(host=='chain.so_dogecoin'){
-			listUnspentChainso_Dogecoin(redeem);
+			listUnspentChainso(redeem, "DOGE");
+
+		} else if(host=='blockcypher_bitcoinmainnet'){
+			listUnspentBlockcypher(redeem, "btc");
+        } else if(host=='blockcypher_litecoin'){
+			listUnspentBlockcypher(redeem, "ltc");
+		} else if(host=='blockcypher_dogecoin'){
+			listUnspentBlockcypher(redeem, "doge");
+
+		} else if(host=='blockchair_bitcoinmainnet'){
+			listUnspentBlockchair(redeem, "bitcoin");
+        } else if(host=='blockchair_litecoin'){
+			listUnspentBlockchair(redeem, "litecoin");
+		} else if(host=='blockchair_dogecoin'){
+			listUnspentBlockchair(redeem, "dogecoin");
+
 		} else if(host=='cryptoid.info_carboncoin'){
 			listUnspentCryptoidinfo_Carboncoin(redeem);
 		} else {
@@ -1054,25 +1076,26 @@ $(document).ready(function() {
 	}
 
 
-	/* retrieve unspent data from chainso for litecoin */
-	function listUnspentChainso_Litecoin(redeem){
+	/* retrieve unspent data from blockcypher */
+	function listUnspentBlockcypher(redeem,network){
 		$.ajax ({
 			type: "GET",
-			url: "https://chain.so/api/v2/get_tx_unspent/ltc/"+redeem.addr,
+			url: "https://api.blockcypher.com/v1/"+network+"/main/addrs/"+redeem.addr+"?includeScript=true&unspentOnly=true",
 			dataType: "json",
 			error: function(data) {
 				$("#redeemFromStatus").removeClass('hidden').html('<span class="glyphicon glyphicon-exclamation-sign"></span> Unexpected error, unable to retrieve unspent outputs!');
 			},
 			success: function(data) {
-				if((data.status && data.data) && data.status=='success'){
-					$("#redeemFromAddress").removeClass('hidden').html('<span class="glyphicon glyphicon-info-sign"></span> Retrieved unspent inputs from address <a href="'+explorer_addr+redeem.addr+'" target="_blank">'+redeem.addr+'</a>');
-					for(var i in data.data.txs){
-						var o = data.data.txs[i];
-						var tx = ((""+o.txid).match(/.{1,2}/g).reverse()).join("")+'';
+				if (data.address) { // address field will always be present, txrefs is only present if there are UTXOs
+					$("#redeemFromAddress").removeClass('hidden').html(
+						'<span class="glyphicon glyphicon-info-sign"></span> Retrieved unspent inputs from address <a href="'+explorer_addr+redeem.addr+'" target="_blank">'+redeem.addr+'</a>');
+					for(var i in data.txrefs){
+                        var o = data.txrefs[i]
+						var tx = ((""+o.tx_hash).match(/.{1,2}/g).reverse()).join("")+'';
 						if(tx.match(/^[a-f0-9]+$/)){
-							var n = o.output_no;
-							var script = (redeem.redeemscript==true) ? redeem.decodedRs : o.script_hex;
-							var amount = o.value;
+							var n = o.tx_output_n;
+							var script = (redeem.redeemscript==true) ? redeem.decodedRs : o.script;
+							var amount = ((o.value.toString()*1)/100000000).toFixed(8);
 							addOutput(tx, n, script, amount);
 						}
 					}
@@ -1121,19 +1144,54 @@ $(document).ready(function() {
 
 	}
 
-	/* retrieve unspent data from chain.so for dogecoin */
-	function listUnspentChainso_Dogecoin(redeem){
+
+	/* retrieve unspent data from blockchair */
+	function listUnspentBlockchair(redeem,network){
 		$.ajax ({
 			type: "GET",
-			url: "https://chain.so/api/v2/get_tx_unspent/doge/"+redeem.addr,
+			url: "https://api.blockchair.com/"+network+"/dashboards/address/"+redeem.addr,
+			dataType: "json",
+			error: function(data) {
+				$("#redeemFromStatus").removeClass('hidden').html('<span class="glyphicon glyphicon-exclamation-sign"></span> Unexpected error, unable to retrieve unspent outputs!');
+			},
+			success: function(data) {
+				if((data.context && data.data) && data.context.code =='200'){
+					$("#redeemFromAddress").removeClass('hidden').html('<span class="glyphicon glyphicon-info-sign"></span> Retrieved unspent inputs from address <a href="'+explorer_addr+redeem.addr+'" target="_blank">'+redeem.addr+'</a>');
+					var all_info = data.data[redeem.addr];
+					for(var i in all_info.utxo){
+						var o = all_info.utxo[i];
+						var tx = ((""+o.transaction_hash).match(/.{1,2}/g).reverse()).join("")+'';
+						if(tx.match(/^[a-f0-9]+$/)){
+							var n = o.index;
+							var script = (redeem.redeemscript==true) ? redeem.decodedRs : all_info.address.script_hex;
+							var amount = ((o.value.toString()*1)/100000000).toFixed(8);
+							addOutput(tx, n, script, amount);
+						}
+					}
+				} else {
+					$("#redeemFromStatus").removeClass('hidden').html('<span class="glyphicon glyphicon-exclamation-sign"></span> Unexpected error, unable to retrieve unspent outputs.');
+				}
+			},
+			complete: function(data, status) {
+				$("#redeemFromBtn").html("Load").attr('disabled',false);
+				totalInputAmount();
+			}
+		});
+	}
+
+
+	/* retrieve unspent data from chainso */
+	function listUnspentChainso(redeem, network){
+		$.ajax ({
+			type: "GET",
+			url: "https://chain.so/api/v2/get_tx_unspent/"+network+"/"+redeem.addr,
 			dataType: "json",
 			error: function(data) {
 				$("#redeemFromStatus").removeClass('hidden').html('<span class="glyphicon glyphicon-exclamation-sign"></span> Unexpected error, unable to retrieve unspent outputs!');
 			},
 			success: function(data) {
 				if((data.status && data.data) && data.status=='success'){
-					$("#redeemFromAddress").removeClass('hidden').html(
-						'<span class="glyphicon glyphicon-info-sign"></span> Retrieved unspent inputs from address <a href="'+explorer_addr+redeem.addr+'" target="_blank">'+redeem.addr+'</a>');
+					$("#redeemFromAddress").removeClass('hidden').html('<span class="glyphicon glyphicon-info-sign"></span> Retrieved unspent inputs from address <a href="'+explorer_addr+redeem.addr+'" target="_blank">'+redeem.addr+'</a>');
 					for(var i in data.data.txs){
 						var o = data.data.txs[i];
 						var tx = ((""+o.txid).match(/.{1,2}/g).reverse()).join("")+'';
@@ -1155,6 +1213,7 @@ $(document).ready(function() {
 		});
 	}
 
+
 	/* math to calculate the inputs and outputs */
 
 	function totalInputAmount(){
@@ -1268,11 +1327,11 @@ $(document).ready(function() {
 	}
 
 	// broadcast transaction via chain.so (mainnet)
-	function rawSubmitChainso_BitcoinMainnet(thisbtn){ 
+	function rawSubmitChainso(thisbtn, network){ 
 		$(thisbtn).val('Please wait, loading...').attr('disabled',true);
 		$.ajax ({
 			type: "POST",
-			url: "https://chain.so/api/v2/send_tx/BTC/",
+			url: "https://chain.so/api/v2/send_tx/"+network+"/",
 			data: {"tx_hex":$("#rawTransaction").val()},
 			dataType: "json",
 			error: function(data) {
@@ -1284,7 +1343,7 @@ $(document).ready(function() {
 			},
                         success: function(data) {
 				if(data.status && data.data.txid){
-					$("#rawTransactionStatus").addClass('alert-success').removeClass('alert-danger').removeClass("hidden").html(' TXID: ' + data.data.txid + '<br> <a href="https://chain.so/tx/BTC/' + data.data.txid + '" target="_blank">View on Blockchain Explorer</a>');
+					$("#rawTransactionStatus").addClass('alert-success').removeClass('alert-danger').removeClass("hidden").html(' TXID: ' + data.data.txid + '<br> <a href="https://chain.so/tx/'+network+'/' + data.data.txid + '" target="_blank">View on Blockchain Explorer</a>');
 				} else {
 					$("#rawTransactionStatus").addClass('alert-danger').removeClass('alert-success').removeClass("hidden").html(' Unexpected error, please try again').prepend('<span class="glyphicon glyphicon-exclamation-sign"></span>');
 				}				
@@ -1297,22 +1356,20 @@ $(document).ready(function() {
 	}
 
 	// broadcast transaction via blockcypher.com (mainnet)
-	function rawSubmitblockcypher_BitcoinMainnet(thisbtn){ 
+	function rawSubmitblockcypher(thisbtn, network){ 
 		$(thisbtn).val('Please wait, loading...').attr('disabled',true);
 		$.ajax ({
 			type: "POST",
-			url: "https://api.blockcypher.com/v1/btc/main/txs/push",
+			url: "https://api.blockcypher.com/v1/"+network+"/main/txs/push",
 			data: JSON.stringify({"tx":$("#rawTransaction").val()}),
 			error: function(data) {
-				var obj = $.parseJSON(data.responseText);
-				var r = ' ';
-				r += (obj.error) ? obj.error : '';
-				r = (r!='') ? r : ' Failed to broadcast'; // build response 
+				var r = 'Failed to broadcast: error code=' + data.status.toString() + ' ' + data.statusText;
 				$("#rawTransactionStatus").addClass('alert-danger').removeClass('alert-success').removeClass("hidden").html(r).prepend('<span class="glyphicon glyphicon-exclamation-sign"></span>');
 			},
                         success: function(data) {
 				if((data.tx) && data.tx.hash){
-					$("#rawTransactionStatus").addClass('alert-success').removeClass('alert-danger').removeClass("hidden").html(' TXID: ' + data.tx.hash + '<br> <a href="https://live.blockcypher.com/btc/tx/' + data.tx.hash + '" target="_blank">View on Blockchain Explorer</a>');
+					$("#rawTransactionStatus").addClass('alert-success').removeClass('alert-danger').removeClass("hidden")
+                    .html(' TXID: ' + data.tx.hash + '<br> <a href="https://live.blockcypher.com/'+network+'/tx/' + data.tx.hash + '" target="_blank">View on Blockchain Explorer</a>');
 				} else {
 					$("#rawTransactionStatus").addClass('alert-danger').removeClass('alert-success').removeClass("hidden").html(' Unexpected error, please try again').prepend('<span class="glyphicon glyphicon-exclamation-sign"></span>');
 				}
@@ -1324,58 +1381,24 @@ $(document).ready(function() {
 		});
 	}
 
-
-	// broadcast transaction via chain.so for litecoin
-	function rawSubmitchainso_litecoin(thisbtn){ 
+	// broadcast transaction via blockchair
+	function rawSubmitblockchair(thisbtn, network){
 		$(thisbtn).val('Please wait, loading...').attr('disabled',true);
                 $.ajax ({
                         type: "POST",
-                        url: "https://chain.so/api/v2/send_tx/LTC",
-            			data: {"tx_hex":$("#rawTransaction").val()},
+                        url: "https://api.blockchair.com/"+network+"/push/transaction",
+                        data: {"data":$("#rawTransaction").val()},
                         dataType: "json",
                         error: function(data) {
-				var obj = $.parseJSON(data.responseText);
-				var r = ' ';
-				r += (obj.data.tx_hex) ? ' '+obj.data.tx_hex : '';
-				r = (r!='') ? r : ' Failed to broadcast'; // build response 
+				var r = 'Failed to broadcast: error code=' + data.status.toString() + ' ' + data.statusText;
 				$("#rawTransactionStatus").addClass('alert-danger').removeClass('alert-success').removeClass("hidden").html(r).prepend('<span class="glyphicon glyphicon-exclamation-sign"></span>');
 			//	console.error(JSON.stringify(data, null, 4));
                         },
                         success: function(data) {
 			//	console.info(JSON.stringify(data, null, 4));
-				if((data.status && data.data) && data.status=='success'){
-					$("#rawTransactionStatus").addClass('alert-success').removeClass('alert-danger').removeClass("hidden").html(' TXID: ' + data.data.txid + '<br> <a href="https://chain.so/tx/LTC/' + data.data.txid + '" target="_blank">View on Blockchain Explorer</a>');
-				} else {
-					$("#rawTransactionStatus").addClass('alert-danger').removeClass('alert-success').removeClass("hidden").html(' Unexpected error, please try again').prepend('<span class="glyphicon glyphicon-exclamation-sign"></span>');
-				}
-			},
-			complete: function(data, status) {
-				$("#rawTransactionStatus").fadeOut().fadeIn();
-				$(thisbtn).val('Submit').attr('disabled',false);				
-                        }
-                });
-	}
-
-	// broadcast transaction via chain.so for dogecoin
-	function rawSubmitchainso_dogecoin(thisbtn){ 
-		$(thisbtn).val('Please wait, loading...').attr('disabled',true);
-                $.ajax ({
-                        type: "POST",
-                        url: "https://chain.so/api/v2/send_tx/DOGE",
-			data: {"tx_hex":$("#rawTransaction").val()},
-                        dataType: "json",
-                        error: function(data) {
-				var obj = $.parseJSON(data.responseText);
-				var r = ' ';
-				r += (obj.data.tx_hex) ? ' '+obj.data.tx_hex : '';
-				r = (r!='') ? r : ' Failed to broadcast'; // build response 
-				$("#rawTransactionStatus").addClass('alert-danger').removeClass('alert-success').removeClass("hidden").html(r).prepend('<span class="glyphicon glyphicon-exclamation-sign"></span>');
-			//	console.error(JSON.stringify(data, null, 4));
-                        },
-                        success: function(data) {
-			//	console.info(JSON.stringify(data, null, 4));
-				if((data.status && data.data) && data.status=='success'){
-					$("#rawTransactionStatus").addClass('alert-success').removeClass('alert-danger').removeClass("hidden").html(' TXID: ' + data.data.txid + '<br> <a href="https://chain.so/tx/DOGE/' + data.data.txid + '" target="_blank">View on Blockchain Explorer</a>');
+				if((data.context && data.data) && data.context.code=='200'){
+					$("#rawTransactionStatus").addClass('alert-success').removeClass('alert-danger').removeClass("hidden")
+                    .html(' TXID: ' + data.data.transaction_hash + '<br> <a href="https://blockchair.com/'+network+'/transaction/' + data.data.transaction_hash + '" target="_blank">View on Blockchain Explorer</a>');
 				} else {
 					$("#rawTransactionStatus").addClass('alert-danger').removeClass('alert-success').removeClass("hidden").html(' Unexpected error, please try again').prepend('<span class="glyphicon glyphicon-exclamation-sign"></span>');
 				}
@@ -1888,22 +1911,48 @@ $(document).ready(function() {
 
 	function configureBroadcast(){
 		var host = $("#coinjs_broadcast option:selected").val();
+
+        // api:             blockcypher     blockchair      chain.so
+        // network name     "btc"           "bitcoin"       "BTC"
+        // network name     "ltc"           "litecoin"      "LTC"
+        // network name     "doge"          "dogecoin"      "DOGE"
+
 		$("#rawSubmitBtn").unbind("");
 		if(host=="chain.so_bitcoinmainnet"){
 			$("#rawSubmitBtn").click(function(){
-				rawSubmitChainso_BitcoinMainnet(this);
+				rawSubmitChainso(this, "BTC");
 			});
 		} else if(host=="chain.so_litecoin"){
 			$("#rawSubmitBtn").click(function(){
-				rawSubmitchainso_litecoin(this);
+				rawSubmitchainso(this, "LTC");
 			});
 		} else if(host=="chain.so_dogecoin"){
 			$("#rawSubmitBtn").click(function(){
-				rawSubmitchainso_dogecoin(this);
+				rawSubmitchainso(this, "DOGE");
 			});
 		} else if(host=="blockcypher_bitcoinmainnet"){
 			$("#rawSubmitBtn").click(function(){
-				rawSubmitblockcypher_BitcoinMainnet(this);
+				rawSubmitblockcypher(this, "btc");
+			});
+		} else if(host=="blockcypher_litecoin"){
+			$("#rawSubmitBtn").click(function(){
+				rawSubmitblockcypher(this, "ltc");
+			});
+		} else if(host=="blockcypher_dogecoin"){
+			$("#rawSubmitBtn").click(function(){
+				rawSubmitblockcypher(this, "doge");
+			});
+		} else if(host=="blockchair_bitcoinmainnet"){
+			$("#rawSubmitBtn").click(function(){
+				rawSubmitblockchair(this, "bitcoin");
+			});
+		} else if(host=="blockchair_litecoin"){
+			$("#rawSubmitBtn").click(function(){
+				rawSubmitblockchair(this, "litecoin");
+			});
+		} else if(host=="blockchair_dogecoin"){
+			$("#rawSubmitBtn").click(function(){
+				rawSubmitblockchair(this, "dogecoin");
 			});
 		} else if(host=="cryptoid.info_carboncoin"){
 			$("#rawSubmitBtn").click(function(){
diff --git a/sha1sum b/sha1sum
index e4d7d26e..f25bee5d 100644
--- a/sha1sum
+++ b/sha1sum
@@ -1,8 +1,8 @@
----- Version 1.4 2019.06.05 ----
+---- Version 1.4 2019.09.22 ----
 77e4519962e2f6a9fc93342137dbb31c33b76b04  ./js/aes.js
 3a09a8fc0cfe828b57fc798d668234d0490ee1a6  ./js/bootstrap-datetimepicker.min.js
 253711c6d825de55a8360552573be950da180614  ./js/bootstrap.min.js
-c151bb100bb186b58407b18055d354abca92042a  ./js/coinbin.js
+ad78fbfe50828c366100426609976c8c56085a0d  ./js/coinbin.js
 8f1286e72a6b06259ba1892e532cb35b11c88c37  ./js/coin.js
 988565bc2cb402d63ed5c5fd7ff47c4278efc2c5  ./js/collapse.js
 9ba5ede3d7f9d4c8fd623395f196adfdcf7e970f  ./js/crypto-min.js
@@ -31,5 +31,5 @@ de51a8494180a6db074af2dee2383f0a363c5b08  ./fonts/glyphicons-halflings-regular.s
 278e49a86e634da6f2a02f3b47dd9d2a8f26210f  ./fonts/glyphicons-halflings-regular.woff
 44bc1850f570972267b169ae18f1cb06b611ffa2  ./fonts/glyphicons-halflings-regular.ttf
 c024021c71cba503979a859d23cbf7a88b570d82  ./README.md
-42541e9411de4550496cea79f2eb1edb4dcf2922  ./index.html
+b3d3e947ebacce5aabfc3af57cbd0e094d06a8c9  ./index.html
 

From 66e3852de9a331103ab0c264c2f950fdf583ca6d Mon Sep 17 00:00:00 2001
From: Wowee0 <co81407@coxj.com>
Date: Thu, 31 Oct 2019 12:01:41 -0500
Subject: [PATCH 02/16] message sign & verify functionality

---
 index.html    |  61 ++++++++++++-
 js/coin.js    | 230 +++++++++++++++++++++++++++++++++++++++++++++++++-
 js/coinbin.js | 164 +++++++++++++++++++++++++++--------
 3 files changed, 416 insertions(+), 39 deletions(-)

diff --git a/index.html b/index.html
index d0df43e3..93e7f0a5 100644
--- a/index.html
+++ b/index.html
@@ -979,10 +979,30 @@ <h2>Verify <small>transactions and other scripts</small></h2>
 							<div class="col-md-12">
 								<p>Enter the raw transaction, redeem script, pubkey, hd address or wif key to convert it into a readable format that can be verified manually.</p>
 								<textarea type="text" id="verifyScript" class="form-control" style="height:125px"></textarea>
+								<br />
+
+								<a href="javascript:;" id="verifyAdvancedCollapse">
+									<div class="well well-sm"><span class="glyphicon glyphicon-collapse-down"></span> Advanced Options</div>
+								</a>
+
+								<div id="verifyAdvanced" class="hidden">
+									<div class="row">
+										<div class="col-md-12">
+										<label><input type="checkbox" id="chkVerifyMessage" class="checkbox-inline">Verify a signed message</label>
+										</div>
+									</div>
+								</div>
 							</div>
 						</div>
 						<br>
 
+						<div class="hidden verifyData" id="verifyMessageData">
+							<p>Enter the information necessary to verify the signed message:</p>
+							<p><b>Address</b>: <input type="text" class="form-control address"></p>
+							<p><b>Signature</b>: <input type="text" class="form-control signature"></p>
+							<br />
+						</div>
+
 						<div class="hidden verifyData" id="verifyRsData">
 
 							<h4>Redeem Script</h4>
@@ -1285,6 +1305,38 @@ <h2>Sign Transaction <small>once a transaction has been verified</small></h2>
 							<div class="alert alert-info" id="sighashTypeInfo">
 								SIGHASH_ALL: The default, signs all the inputs and outputs, protecting everything except the signature scripts against modification.
 							</div>
+
+							<div class="row">
+								<div class="col-md-12">
+								<label><input type="checkbox" id="chkSignMessage" class="checkbox-inline">Sign a text message</label>
+
+								<div class="hidden signData" id="signMessageData">
+									<div class="col-xs-3">
+										Address type
+										<select id="sigAddressType" class="form-control">
+											<option selected>p2pkh</option>
+											<option>p2sh(p2wpkh)</option>
+											<option>p2wpkh</option>
+										</select>
+									</div>
+									<div class="col-xs-10">
+									<label>Address</label><span class="text-muted"> (for verifying)</span>
+									<div class="input-group-btn">
+										<input id="newSignPub" type="text" class="form-control" value="" readonly>
+									</div>
+									<label>Signature</label>
+									<div class="input-group-btn">
+										<input id="newSignSig" type="text" class="form-control" value="" readonly>
+									</div>
+									</div>
+									<br />
+									<br />
+									<br />
+									<br />
+								</div>
+							</div>
+
+
 						</div>
 
 						<div class="alert alert-danger hidden" id="signedDataError">
@@ -1387,15 +1439,20 @@ <h2>Settings <small> making coinb.in even better!</small></h2>
 
 
 							<div class="row">
-								<div class="col-md-6">
+								<div class="col-md-4">
 									<b>HD Pub</b>: <br>
 									<input type="text" class="form-control coinjssetting" id="coinjs_hdpub">
 								</div>
 
-								<div class="col-md-6">
+								<div class="col-md-4">
 									<b>HD Priv</b>: <br>
 									<input type="text" class="form-control coinjssetting" id="coinjs_hdprv">
 								</div>
+
+								<div class="col-md-4">
+									<b>Network</b>: <br>
+									<input type="text" class="form-control" id="coinjs_network">
+								</div>
 							</div>
 
 							<br>
diff --git a/js/coin.js b/js/coin.js
index b25c197c..0e6fbae5 100644
--- a/js/coin.js
+++ b/js/coin.js
@@ -10,6 +10,7 @@
 	var coinjs = window.coinjs = function () { };
 
 	/* public vars */
+	coinjs.network = "bitcoin_mainnet";
 	coinjs.pub = 0x00;
 	coinjs.priv = 0x80;
 	coinjs.multisig = 0x05;
@@ -1388,7 +1389,7 @@
 			// some necessary things out of the way for clarity.
 			badrs = badrs || 0;
 			var key = coinjs.wif2privkey(wif);
-			var x = Crypto.util.hexToBytes(key['privkey'])
+			var x = Crypto.util.hexToBytes(key['privkey']);
 			var curve = EllipticCurve.getSECCurveByName("secp256k1");
 			var N = curve.getN();
 
@@ -1746,6 +1747,159 @@
 
 	/* start of signature vertification functions */
 
+	// method for signing a message
+	coinjs.MsgSig = function(wif, message, bip0137) {
+		var hash = Crypto.SHA256(Crypto.SHA256(message,{asBytes: true}),{asBytes: true});
+		var curve = EllipticCurve.getSECCurveByName("secp256k1");
+		var key = coinjs.wif2privkey(wif);
+		var priv = BigInteger.fromByteArrayUnsigned(Crypto.util.hexToBytes(key['privkey']));
+		var n = curve.getN();
+		var e = BigInteger.fromByteArrayUnsigned(hash);
+		var badrs = 0;
+		var recId = 1;
+		do {
+			var k = coinjs.transaction().deterministicK(wif, hash, badrs);
+			var G = curve.getG();
+			var Q = G.multiply(k);
+			var r = Q.getX().toBigInteger().mod(n);
+			var s = k.modInverse(n).multiply(e.add(priv.multiply(r))).mod(n);
+			if (Q.getY().toBigInteger().mod(n).isEven()) {
+				recId = 0;
+			}
+			badrs++
+		} while (r.compareTo(BigInteger.ZERO) <= 0 || s.compareTo(BigInteger.ZERO) <= 0);
+
+		// Force lower s values per BIP62
+		var halfn = n.shiftRight(1);
+		if (s.compareTo(halfn) > 0) {
+			s = n.subtract(s);
+			recId ^= 1;
+		};
+
+		var rBa = r.toByteArraySigned();
+		var sBa = s.toByteArraySigned();
+		var rec = 0;
+		if (rBa.length > 32 && rBa[0] == 0) {
+			rBa.splice(0,1);	// remove first 0 element
+		}
+		var derivedAddress = "";
+
+		// bip0137: recId encodes address type and key derivation info
+		if (bip0137 == "p2pkh") {
+			if (key['compressed'] == false)	{
+				recId = recId + 27;
+			}
+			else {
+				recId = recId + 31;
+			}
+			derivedAddress = coinjs.wif2address(wif);
+		}
+		else if (bip0137 == "p2sh(p2wpkh)") {
+			recId = recId + 35;
+			derivedAddress = coinjs.segwitAddress(coinjs.wif2pubkey(wif).pubkey);
+		}
+		else if (bip0137 == "p2wpkh") {
+			recId = recId + 39;
+			derivedAddress = coinjs.bech32Address(coinjs.wif2pubkey(wif).pubkey);
+		}
+		var signature = [];
+		signature.push(recId);
+		signature = signature.concat(rBa).concat(sBa);
+		return {'address':derivedAddress, 'signature':signature};
+	}
+
+	/*
+	https://tools.ietf.org/html/rfc6979
+	https://stackoverflow.com/questions/19665491/how-do-i-get-an-ecdsa-public-key-from-just-a-bitcoin-signature-sec1-4-1-6-k
+	https://crypto.stackexchange.com/questions/18105/how-does-recovering-the-public-key-from-an-ecdsa-signature-work/18106#18106
+	https://github.com/nanotube/supybot-bitcoin-marketmonitor/blob/master/GPG/local/bitcoinsig.py
+
+	 with the signature and the message that was signed, and the knowledge of the curve,
+	 it is possible to generate two public keys; one of which will be the public key
+	 corresponding to the private key used.
+
+	Here's how that works:
+
+	  First, you find the two points 𝑅, 𝑅′ which have the value 𝑟 as the x-coordinate 𝑟
+
+	  You also compute 𝑟−1, which is the multiplicative inverse of the value 𝑟
+	  from the signature (modulo the order of the generator of the curve).
+
+	  Then, you compute 𝑧
+	  which is the lowest 𝑛 bits of the hash of the message (where 𝑛 is the bit size of the curve).
+
+	  Then, the two public keys are 𝑟^−1(𝑠𝑅−𝑧𝐺) and 𝑟^−1(𝑠𝑅′−𝑧𝐺)
+
+	  It is easy to verify that if you plug either of these values in the ECDSA signature routines as the public keys, the signature validates.
+
+	Addendum:
+	  𝑄1=𝑟^−1(𝑠𝑅−𝑧𝐺) and 𝑄2=𝑟^−1(𝑠𝑅′−𝑧𝐺)
+	 (𝑠^−1 𝑧𝐺 + 𝑠^−1 𝑟𝑄𝑖)𝑥 = 𝑟 mod 𝑛
+	*/
+
+	coinjs.MsgSigVerify = function (message, sig, address) {
+		var hash = Crypto.SHA256(Crypto.SHA256(message,{asBytes: true}),{asBytes: true});
+		var cursor = 1;
+		var fCompressed = true;
+		var recId = sig.slice(cursor-1, cursor);
+		var rBa = sig.slice(cursor, cursor + 32);
+		cursor += rBa.length;
+		var sBa = sig.slice(cursor, cursor + 32);
+
+		// github.com/bitcoin/bips/blob/master/bip-0137.mediawiki <--- recId
+		var bip0137 = "p2pkh";
+		if (recId >= 35 && recId <= 38) {
+			recId = recId - 35;
+			bip0137 = "p2sh(p2wpkh)";
+		}
+		else if (recId >= 39 && recId <= 42) {
+			recId = recId - 39;
+			bip0137 = "p2wpkh";
+		}
+		else if (recId >= 31 && recId <= 34) {
+			recId = recId - 31;
+		}
+		else if (recId >= 27 && recId <= 30) {
+			recId = recId - 27;
+			fCompressed = false;  // this is the only case uncompressed keys are used
+		}
+
+		var r = BigInteger.fromByteArrayUnsigned(rBa);
+		var s = BigInteger.fromByteArrayUnsigned(sBa);
+		var ecparams = EllipticCurve.getSECCurveByName("secp256k1");
+		var curve = ecparams.getCurve();
+		var n = ecparams.getN();
+		var G = ecparams.getG();
+		// 1.1 x = r + jn
+		var x = r;
+		// 1.3 convert x to a point on the curve
+		var R1 = curve.decompressPoint(recId, x);
+		var R2 = R1.negate();
+		// 1.5 compute e from M (hash done already)
+		var e = BigInteger.fromByteArrayUnsigned(hash);
+		// 1.6.1 candidate pubkey Q = r^-1 (sR - eG)
+		//var Q = r.pow(-1).multiply((s.multiply(R).subtract(e.multiply(G))));
+		var v1 = r.modInverse(n)
+		var v2 = G.multiply(e);
+		var v3 = R1.multiply(s);
+		var v4 = v3.add(v2.negate());
+		var Q = v4.multiply(v1);
+		var pubkey = Crypto.util.bytesToHex(Q.getEncoded(compressed=fCompressed));
+		if (bip0137 == "p2pkh") {
+			derivedAddress = coinjs.pubkey2address(pubkey);
+		}
+		if (bip0137 == "p2sh(p2wpkh)") {
+			derivedAddress = coinjs.segwitAddress(pubkey).address;
+		}
+		if (bip0137 == "p2wpkh") {
+			derivedAddress = coinjs.bech32Address(pubkey).address;
+		}
+		return (address==derivedAddress);
+	}
+
+
+
+
 	coinjs.verifySignature = function (hash, sig, pubkey) {
 
 		function parseSig (sig) {
@@ -1870,6 +2024,80 @@
 		return bytes;		
 	}
 
+	/**
+	*
+	*  Base64 encode / decode
+	*  http://www.webtoolkit.info/
+	*
+	**/
+
+
+	// private property
+
+	// public method for encoding
+	coinjs.base64encode = function (input) {
+		var _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
+		var output = "";
+		var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
+		var i = 0;
+
+		//input = Base64._utf8_encode(input);
+
+		while (i < input.length) {
+
+		    chr1 = input[i++]; //.charCodeAt(i++);
+		    chr2 = input[i++]; //.charCodeAt(i++);
+		    chr3 = input[i++]; //.charCodeAt(i++);
+
+		    enc1 = chr1 >> 2;
+		    enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
+		    enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
+		    enc4 = chr3 & 63;
+
+		    if (isNaN(chr2)) {
+		        enc3 = enc4 = 64;
+		    } else if (isNaN(chr3)) {
+		        enc4 = 64;
+		    }
+
+		    output = output +
+		    _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +
+		    _keyStr.charAt(enc3) + _keyStr.charAt(enc4);
+		}
+		return output;
+	},
+
+	// public method for decoding
+	coinjs.base64decode = function (input) {
+		var _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
+		var output = [];
+		var chr1, chr2, chr3;
+		var enc1, enc2, enc3, enc4;
+		var i = 0;
+
+		 while (i < input.length) {
+
+		    enc1 = _keyStr.indexOf(input.charAt(i++));
+		    enc2 = _keyStr.indexOf(input.charAt(i++));
+		    enc3 = _keyStr.indexOf(input.charAt(i++));
+		    enc4 = _keyStr.indexOf(input.charAt(i++));
+
+		    chr1 = (enc1 << 2) | (enc2 >> 4);
+		    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
+		    chr3 = ((enc3 & 3) << 6) | enc4;
+
+		    output.push(chr1);
+
+		    if (enc3 != 64) {
+		        output.push(chr2);
+		    }
+		    if (enc4 != 64) {
+		        output.push(chr3);
+		    }
+		}
+		return output;
+	}
+
 	/* raw ajax function to avoid needing bigger frame works like jquery, mootools etc */
 	coinjs.ajax = function(u, f, m, a){
 		var x = false;
diff --git a/js/coinbin.js b/js/coinbin.js
index 6a42fdda..4d5101be 100644
--- a/js/coinbin.js
+++ b/js/coinbin.js
@@ -1411,25 +1411,99 @@ $(document).ready(function() {
 	}
 
 
+	$("#chkVerifyMessage").click(function(){
+		if($(this).is(":checked")){
+			$("#verifyMessageData").removeClass("hidden");
+		} else {
+			$("#verifyMessageData").addClass("hidden");
+		}	
+	});
+
+	$("#chkSignMessage").click(function(){
+		if($(this).is(":checked")){
+			$("#signMessageData").removeClass("hidden");
+		} else {
+			$("#signMessageData").addClass("hidden");
+		}	
+	});
 
 
-	/* verify script code */
+	/* sign message code */
+	function signMessage() {
+		var rawmessage = $("#signTransaction").val();
+		var wif = $("#signPrivateKey").val();
+		if (wif.length == 0) {
+			alert("Enter the WIF key to sign.");
+		} else {
+			try {
+				var bip0137 = $("#sigAddressType option:selected").html();
+				var messageToSign = formatSigningMessage(rawmessage);
+				var sigArr = coinjs.MsgSig(wif, messageToSign, bip0137);
+				var sigB64 = coinjs.base64encode(sigArr.signature);
+				$("#newSignSig").val(sigB64);
+				$("#newSignPub").val(sigArr.address.address);
+			} catch(e) {
+				console.log(e);
+			}
+		}
+	}
+
+	/* verify message code */
+	function verifySignedMessage() {
+		var rawmessage = $("#verifyScript").val();
+		var messageToSign = formatSigningMessage(rawmessage);
+		var sigB64 = $("#verifyMessageData .signature").val();
+		var w2address = $("#verifyMessageData .address").val();
+		var sigB64b = coinjs.base64decode(sigB64);
+		var sigB64t = Crypto.util.bytesToHex(sigB64b);
+		if (coinjs.MsgSigVerify(messageToSign, sigB64b, w2address)) {
+			alert("message verified!"); }
+		else {
+			alert("message NOT verified!"); }
+	}
+
+	// signed messages predefined format, eg: "[varint]Bitcoin Signed Message:\n[varint][message]"
+	function formatSigningMessage(postfix) {
+		var messageToSign = [];
+		var prefix = "Signed Message:\n";
+		if (coinjs.network.indexOf("bitcoin")>=0)    { prefix = "Bitcoin " + prefix; }
+		if (coinjs.network.indexOf("litecoin")>=0)   { prefix = "Litecoin " + prefix; }
+		if (coinjs.network.indexOf("dogecoin")>=0)   { prefix = "Dogecoin " + prefix; }
+		if (coinjs.network.indexOf("carboncoin")>=0) { prefix = "Carboncoin " + prefix; }
+		if (coinjs.network.indexOf("shadowcash")>=0) { prefix = "Shadowcash " + prefix; }
+		messageToSign = messageToSign.concat(coinjs.numToVarInt(prefix.length));
+		messageToSign = messageToSign.concat(prefix.split(''));
+		messageToSign = messageToSign.concat(coinjs.numToVarInt(postfix.length));
+		messageToSign = messageToSign.concat(postfix.split(''));
+		for (i=0; i < messageToSign.length; i++) {
+			if (typeof messageToSign[i] === 'string') {
+				messageToSign[i] = messageToSign[i].charCodeAt(0);
+			}
+		}
+		return messageToSign;
+	}
 
+
+	/* verify script code */
 	$("#verifyBtn").click(function(){
-		$(".verifyData").addClass("hidden");
 		$("#verifyStatus").hide();
-		if(!decodeRedeemScript()){
-			if(!decodeTransactionScript()){
-				if(!decodePrivKey()){
-					if(!decodePubKey()){
-						if(!decodeHDaddress()){
-							$("#verifyStatus").removeClass('hidden').fadeOut().fadeIn();
+		if($("#chkVerifyMessage").is(":checked")){
+			verifySignedMessage();
+		}
+		else {
+			$(".verifyData").addClass("hidden");
+			if(!decodeRedeemScript()){
+				if(!decodeTransactionScript()){
+					if(!decodePrivKey()){
+						if(!decodePubKey()){
+							if(!decodeHDaddress()){
+								$("#verifyStatus").removeClass('hidden').fadeOut().fadeIn();
+							}
 						}
 					}
 				}
 			}
 		}
-
 	});
 
 	function decodeRedeemScript(){
@@ -1676,37 +1750,42 @@ $(document).ready(function() {
 	/* sign code */
 
 	$("#signBtn").click(function(){
-		var wifkey = $("#signPrivateKey");
-		var script = $("#signTransaction");
-
-		if(coinjs.addressDecode(wifkey.val())){
-			$(wifkey).parent().removeClass('has-error');
-		} else {
-			$(wifkey).parent().addClass('has-error');
+		if($("#chkSignMessage").is(":checked")){
+			var signed = signMessage();
 		}
+		else {
+			var wifkey = $("#signPrivateKey");
+			var script = $("#signTransaction");
 
-		if((script.val()).match(/^[a-f0-9]+$/ig)){
-			$(script).parent().removeClass('has-error');
-		} else {
-			$(script).parent().addClass('has-error');
-		}
+			if(coinjs.addressDecode(wifkey.val())){
+				$(wifkey).parent().removeClass('has-error');
+			} else {
+				$(wifkey).parent().addClass('has-error');
+			}
 
-		if($("#sign .has-error").length==0){
-			$("#signedDataError").addClass('hidden');
-			try {
-				var tx = coinjs.transaction();
-				var t = tx.deserialize(script.val());
+			if((script.val()).match(/^[a-f0-9]+$/ig)){
+				$(script).parent().removeClass('has-error');
+			} else {
+				$(script).parent().addClass('has-error');
+			}
 
-				var signed = t.sign(wifkey.val(), $("#sighashType option:selected").val());
-				$("#signedData textarea").val(signed);
-				$("#signedData .txSize").html(t.size());
-				$("#signedData").removeClass('hidden').fadeIn();
-			} catch(e) {
-				// console.log(e);
+			if($("#sign .has-error").length==0){
+				$("#signedDataError").addClass('hidden');
+				try {
+					var tx = coinjs.transaction();
+					var t = tx.deserialize(script.val());
+
+					var signed = t.sign(wifkey.val(), $("#sighashType option:selected").val());
+					$("#signedData textarea").val(signed);
+					$("#signedData .txSize").html(t.size());
+					$("#signedData").removeClass('hidden').fadeIn();
+				} catch(e) {
+					// console.log(e);
+				}
+			} else {
+				$("#signedDataError").removeClass('hidden');
+				$("#signedData").addClass('hidden');
 			}
-		} else {
-			$("#signedDataError").removeClass('hidden');
-			$("#signedData").addClass('hidden');
 		}
 	});
 
@@ -1724,6 +1803,16 @@ $(document).ready(function() {
 		}
 	});
 
+	$("#verifyAdvancedCollapse").click(function(){
+		if($("#verifyAdvanced").hasClass('hidden')){
+			$("span",this).removeClass('glyphicon-collapse-down').addClass('glyphicon-collapse-up');
+			$("#verifyAdvanced").removeClass("hidden");
+		} else {
+			$("span",this).removeClass('glyphicon-collapse-up').addClass('glyphicon-collapse-down');
+			$("#verifyAdvanced").addClass("hidden");
+		}
+	});
+
 	/* page load code */
 
 	function _get(value) {
@@ -1848,6 +1937,7 @@ $(document).ready(function() {
 
 		if($("#settings .has-error").length==0){
 
+			coinjs.network =  $("#coinjs_network").val();
 			coinjs.pub =  $("#coinjs_pub").val()*1;
 			coinjs.priv =  $("#coinjs_priv").val()*1;
 			coinjs.multisig =  $("#coinjs_multisig").val()*1;
@@ -1874,6 +1964,7 @@ $(document).ready(function() {
 
 	$("#coinjs_coin").change(function(){
 
+		var network = ($("option:selected",this).attr("value")).split(";");
 		var o = ($("option:selected",this).attr("rel")).split(";");
 
 		// deal with broadcasting settings
@@ -1895,6 +1986,7 @@ $(document).ready(function() {
 		}
 
 		// deal with the reset
+		$("#coinjs_network").val(network);
 		$("#coinjs_pub").val(o[0]);
 		$("#coinjs_priv").val(o[1]);
 		$("#coinjs_multisig").val(o[2]);

From b276db4a0a4b4850305239608ae9ab6a0c43492c Mon Sep 17 00:00:00 2001
From: Ivy Dong <ivy@IvydeMacBook-Pro.local>
Date: Sun, 16 Dec 2018 20:04:27 +0800
Subject: [PATCH 03/16] remove redundant quotation marks

---
 index.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/index.html b/index.html
index 323edc3b..5f387a50 100644
--- a/index.html
+++ b/index.html
@@ -609,7 +609,7 @@ <h2>Transaction <small>Create a new transaction</small></h2>
 
 								<label>Null Data</label> <span class="text-muted text-normal">(80 byte limit, <i>40 bytes recommended</i>)</span>
 								<p class="checkbox">
-									<label><input type="checkbox" id="opReturn" class="checkbox-inline"> Allow data to be sent within the transaction and stored in the blockchain by using <a href="https://bitcoin.org/en/developer-guide#null-data" target="_"blank">OP_RETURN</a>.</label>
+									<label><input type="checkbox" id="opReturn" class="checkbox-inline"> Allow data to be sent within the transaction and stored in the blockchain by using <a href="https://bitcoin.org/en/developer-guide#null-data" target="_blank">OP_RETURN</a>.</label>
 									<div class="text-muted">When using this option you may enter a hex string or address into the address field on the output tab.</div>
 								</p>
 

From e1674e153f865a190573f68fbb3d32505f4837b6 Mon Sep 17 00:00:00 2001
From: Wowee0 <cox81407@coxj.com>
Date: Fri, 19 Apr 2019 10:40:59 -0500
Subject: [PATCH 04/16] re-enabled Litecoin

---
 index.html    |  2 ++
 js/coinbin.js | 47 ++++++++++++++++++++++++++++++++++++++++++-----
 2 files changed, 44 insertions(+), 5 deletions(-)

diff --git a/index.html b/index.html
index 5f387a50..f12d5833 100644
--- a/index.html
+++ b/index.html
@@ -1334,6 +1334,7 @@ <h2>Settings <small> making coinb.in even better!</small></h2>
 								<p class="text-muted">Select which network you'd like to use for key pair generation.</p>
 								<select class="form-control" id="coinjs_coin">
 									<option value="bitcoin_mainnet" rel="0x00;0x80;0x05;0x488b21e;0x488ade4;coinb.in;coinb.in">Bitcoin (mainnet)</option>
+									<option value="litecoin_mainnet" rel="0x30;0xb0;0x05;0x019da462;0x019d9cfe;chain.so_litecoin;chain.so_litecoin">Litecoin (mainnet)</option>
 									<option value="dogecoin_mainnet" rel="0x1e;0x9e;0x16;0x0827421e;0x089944e4;chain.so_dogecoin;chain.so_dogecoin">Dogecoin (mainnet)</option>
 									<option value="carboncoin_mainnet" rel="0x2f;0xaf;0x05;0x488b21e;0x488ade4;cryptoid.info_carboncoin;cryptoid.info_carboncoin">Carboncoin (mainnet)</option>
 									<option value="shadowcash_mainnet" rel="0x3f;0xbf;0x7d;0xee80286a;0xee8031e8;false;false">ShadowCash (mainnet)</option>
@@ -1393,6 +1394,7 @@ <h2>Settings <small> making coinb.in even better!</small></h2>
 									<option value="coinb.in">coinb.in (Bitcoin mainnet)</option>
 									<option value="chain.so_bitcoinmainnet"> Chain.so (Bitcoin mainnet)</option>
 									<option value="blockcypher_bitcoinmainnet"> Blockcypher.com (Bitcoin mainnet)</option>
+									<option value="chain.so_litecoin"> Chain.so (Litecoin)</option>
 									<option value="chain.so_dogecoin"> Chain.so (Dogecoin)</option>
 									<option value="cryptoid.info_carboncoin"> Cryptoid.info (Carboncoin)</option>
 								</select>
diff --git a/js/coinbin.js b/js/coinbin.js
index c287ddbd..0601a879 100644
--- a/js/coinbin.js
+++ b/js/coinbin.js
@@ -1037,11 +1037,13 @@ $(document).ready(function() {
 					$("#redeemFromAddress").removeClass('hidden').html('<span class="glyphicon glyphicon-info-sign"></span> Retrieved unspent inputs from address <a href="'+explorer_addr+redeem.addr+'" target="_blank">'+redeem.addr+'</a>');
 					for(var i in data.data.txs){
 						var o = data.data.txs[i];
-						var tx = ((o.txid).match(/.{1,2}/g).reverse()).join("")+'';
-						var n = o.output_no;
-						var script = (redeem.redeemscript==true) ? redeem.decodedRs : o.script_hex;
-						var amount = o.value;
-						addOutput(tx, n, script, amount);
+						var tx = ((""+o.txid).match(/.{1,2}/g).reverse()).join("")+'';
+						if(tx.match(/^[a-f0-9]+$/)){
+							var n = o.output_no;
+							var script = (redeem.redeemscript==true) ? redeem.decodedRs : o.script_hex;
+							var amount = o.value;
+							addOutput(tx, n, script, amount);
+						}
 					}
 				} else {
 					$("#redeemFromStatus").removeClass('hidden').html('<span class="glyphicon glyphicon-exclamation-sign"></span> Unexpected error, unable to retrieve unspent outputs.');
@@ -1292,6 +1294,37 @@ $(document).ready(function() {
 	}
 
 
+	// broadcast transaction via chain.so for litecoin
+	function rawSubmitchainso_litecoin(thisbtn){ 
+		$(thisbtn).val('Please wait, loading...').attr('disabled',true);
+                $.ajax ({
+                        type: "POST",
+                        url: "https://chain.so/api/v2/send_tx/LTC",
+            			data: {"tx_hex":$("#rawTransaction").val()},
+                        dataType: "json",
+                        error: function(data) {
+				var obj = $.parseJSON(data.responseText);
+				var r = ' ';
+				r += (obj.data.tx_hex) ? ' '+obj.data.tx_hex : '';
+				r = (r!='') ? r : ' Failed to broadcast'; // build response 
+				$("#rawTransactionStatus").addClass('alert-danger').removeClass('alert-success').removeClass("hidden").html(r).prepend('<span class="glyphicon glyphicon-exclamation-sign"></span>');
+			//	console.error(JSON.stringify(data, null, 4));
+                        },
+                        success: function(data) {
+			//	console.info(JSON.stringify(data, null, 4));
+				if((data.status && data.data) && data.status=='success'){
+					$("#rawTransactionStatus").addClass('alert-success').removeClass('alert-danger').removeClass("hidden").html(' Txid: ' + data.data.txid);
+				} else {
+					$("#rawTransactionStatus").addClass('alert-danger').removeClass('alert-success').removeClass("hidden").html(' Unexpected error, please try again').prepend('<span class="glyphicon glyphicon-exclamation-sign"></span>');
+				}
+			},
+			complete: function(data, status) {
+				$("#rawTransactionStatus").fadeOut().fadeIn();
+				$(thisbtn).val('Submit').attr('disabled',false);				
+                        }
+                });
+	}
+
 	// broadcast transaction via chain.so for dogecoin
 	function rawSubmitchainso_dogecoin(thisbtn){ 
 		$(thisbtn).val('Please wait, loading...').attr('disabled',true);
@@ -1821,6 +1854,10 @@ $(document).ready(function() {
 			$("#rawSubmitBtn").click(function(){
 				rawSubmitChainso_BitcoinMainnet(this);
 			});
+		} else if(host=="chain.so_litecoin"){
+			$("#rawSubmitBtn").click(function(){
+				rawSubmitchainso_litecoin(this);
+			});
 		} else if(host=="chain.so_dogecoin"){
 			$("#rawSubmitBtn").click(function(){
 				rawSubmitchainso_dogecoin(this);

From 786d6c25133c07eb0606eec8562c388b36de1ffa Mon Sep 17 00:00:00 2001
From: Wowee0 <cox81407@coxj.com>
Date: Sat, 20 Apr 2019 23:28:40 -0500
Subject: [PATCH 05/16] LTC SegWit (pre-bech32) address version changed from 5
 to 50 (i.e. 3-addresses changed to M-addresses)

---
 index.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/index.html b/index.html
index f12d5833..bf1098d7 100644
--- a/index.html
+++ b/index.html
@@ -1334,7 +1334,7 @@ <h2>Settings <small> making coinb.in even better!</small></h2>
 								<p class="text-muted">Select which network you'd like to use for key pair generation.</p>
 								<select class="form-control" id="coinjs_coin">
 									<option value="bitcoin_mainnet" rel="0x00;0x80;0x05;0x488b21e;0x488ade4;coinb.in;coinb.in">Bitcoin (mainnet)</option>
-									<option value="litecoin_mainnet" rel="0x30;0xb0;0x05;0x019da462;0x019d9cfe;chain.so_litecoin;chain.so_litecoin">Litecoin (mainnet)</option>
+									<option value="litecoin_mainnet" rel="0x30;0xb0;0x32;0x019da462;0x019d9cfe;chain.so_litecoin;chain.so_litecoin">Litecoin (mainnet)</option>
 									<option value="dogecoin_mainnet" rel="0x1e;0x9e;0x16;0x0827421e;0x089944e4;chain.so_dogecoin;chain.so_dogecoin">Dogecoin (mainnet)</option>
 									<option value="carboncoin_mainnet" rel="0x2f;0xaf;0x05;0x488b21e;0x488ade4;cryptoid.info_carboncoin;cryptoid.info_carboncoin">Carboncoin (mainnet)</option>
 									<option value="shadowcash_mainnet" rel="0x3f;0xbf;0x7d;0xee80286a;0xee8031e8;false;false">ShadowCash (mainnet)</option>

From 3c63849c4fe73893dac58af3956614a8e2abb12c Mon Sep 17 00:00:00 2001
From: Wowee0 <cox81407@coxj.com>
Date: Mon, 22 Apr 2019 22:09:20 -0500
Subject: [PATCH 06/16] set appropriate hrp for Litecoin SegWit addresses set
 chain.so/address/LTC for view of address (previously was referencing BTC
 block explorer)

---
 js/coinbin.js | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/js/coinbin.js b/js/coinbin.js
index 0601a879..475c9c88 100644
--- a/js/coinbin.js
+++ b/js/coinbin.js
@@ -1804,6 +1804,14 @@ $(document).ready(function() {
 			configureBroadcast();
 			configureGetUnspentTx();
 
+            if (coinjs.pub == 0x30){   // LTC
+                explorer_addr = "https://chain.so/address/LTC/";
+                coinjs.bech32.hrp = "ltc";
+            }
+            else if (coinjs.pub == 0x1e){   // DOGE
+                explorer_addr = "https://chain.so/address/DOGE/";
+            }
+
 			$("#statusSettings").addClass("alert-success").removeClass("hidden").html("<span class=\"glyphicon glyphicon-ok\"></span> Settings updates successfully").fadeOut().fadeIn();	
 		} else {
 			$("#statusSettings").addClass("alert-danger").removeClass("hidden").html("There is an error with one or more of your settings");	

From 3f3165cf96129f73c239cedb50899c11d0eb05d4 Mon Sep 17 00:00:00 2001
From: OutCast3k <OutCast3k@gmail.com>
Date: Sun, 5 May 2019 09:22:52 +0000
Subject: [PATCH 07/16] updated sha1sum file

---
 sha1sum | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/sha1sum b/sha1sum
index da8e2d0e..efb736e9 100644
--- a/sha1sum
+++ b/sha1sum
@@ -1,8 +1,8 @@
----- Version 1.4 2019.02.06 ---
+---- Version 1.4 2019.05.05 ---
 77e4519962e2f6a9fc93342137dbb31c33b76b04  ./js/aes.js
 3a09a8fc0cfe828b57fc798d668234d0490ee1a6  ./js/bootstrap-datetimepicker.min.js
 253711c6d825de55a8360552573be950da180614  ./js/bootstrap.min.js
-a61ad2055a75482f0f7478647fd9a726adfecfb9  ./js/coinbin.js
+84f3ae3cd808b8aa237a8e04c70ad858ddb79b16  ./js/coinbin.js
 d7e828cea4e9af4934cc500d022cb1b6ce12cbb0  ./js/coin.js
 988565bc2cb402d63ed5c5fd7ff47c4278efc2c5  ./js/collapse.js
 9ba5ede3d7f9d4c8fd623395f196adfdcf7e970f  ./js/crypto-min.js
@@ -31,4 +31,4 @@ de51a8494180a6db074af2dee2383f0a363c5b08  ./fonts/glyphicons-halflings-regular.s
 278e49a86e634da6f2a02f3b47dd9d2a8f26210f  ./fonts/glyphicons-halflings-regular.woff
 44bc1850f570972267b169ae18f1cb06b611ffa2  ./fonts/glyphicons-halflings-regular.ttf
 c024021c71cba503979a859d23cbf7a88b570d82  ./README.md
-26552aac02a06e88b419539f93032de8a25e1edd  ./index.html
+ec9ad10deec0de54879c05fcfe44a96270458265  ./index.html

From 91b1d79f2231542d0741d74e9910c947225cb59f Mon Sep 17 00:00:00 2001
From: yottalogical <yottalogical@gmail.com>
Date: Sun, 5 May 2019 12:30:28 -0400
Subject: [PATCH 08/16] Add link to blockchain explorer for Chain.so (Litecoin)

---
 js/coinbin.js | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/js/coinbin.js b/js/coinbin.js
index 475c9c88..e8e41609 100644
--- a/js/coinbin.js
+++ b/js/coinbin.js
@@ -1313,7 +1313,7 @@ $(document).ready(function() {
                         success: function(data) {
 			//	console.info(JSON.stringify(data, null, 4));
 				if((data.status && data.data) && data.status=='success'){
-					$("#rawTransactionStatus").addClass('alert-success').removeClass('alert-danger').removeClass("hidden").html(' Txid: ' + data.data.txid);
+					$("#rawTransactionStatus").addClass('alert-success').removeClass('alert-danger').removeClass("hidden").html(' TXID: ' + data.data.txid + '<br> <a href="https://chain.so/tx/LTC/' + data.data.txid + '" target="_blank">View on Blockchain Explorer</a>');
 				} else {
 					$("#rawTransactionStatus").addClass('alert-danger').removeClass('alert-success').removeClass("hidden").html(' Unexpected error, please try again').prepend('<span class="glyphicon glyphicon-exclamation-sign"></span>');
 				}

From c7fe185cae1d0d40af82576176705449a9ec8a8a Mon Sep 17 00:00:00 2001
From: yottalogical <yottalogical@gmail.com>
Date: Sun, 5 May 2019 12:36:32 -0400
Subject: [PATCH 09/16] Update sha1sum

---
 sha1sum | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/sha1sum b/sha1sum
index efb736e9..13188375 100644
--- a/sha1sum
+++ b/sha1sum
@@ -2,7 +2,7 @@
 77e4519962e2f6a9fc93342137dbb31c33b76b04  ./js/aes.js
 3a09a8fc0cfe828b57fc798d668234d0490ee1a6  ./js/bootstrap-datetimepicker.min.js
 253711c6d825de55a8360552573be950da180614  ./js/bootstrap.min.js
-84f3ae3cd808b8aa237a8e04c70ad858ddb79b16  ./js/coinbin.js
+82b602589fb4cf9be970fb67a9fc1a9b504d8075  ./js/coinbin.js
 d7e828cea4e9af4934cc500d022cb1b6ce12cbb0  ./js/coin.js
 988565bc2cb402d63ed5c5fd7ff47c4278efc2c5  ./js/collapse.js
 9ba5ede3d7f9d4c8fd623395f196adfdcf7e970f  ./js/crypto-min.js

From 4ba09d1980065199263dab448b2e590fdaba0a32 Mon Sep 17 00:00:00 2001
From: oliverdorn <developer@verioweb.de>
Date: Sat, 25 Nov 2017 00:49:16 +0100
Subject: [PATCH 10/16] Added Buttons for printing Paper Wallets

Added Buttons for printint Paper Wallets for generated Legacy- and SegWit-Adresses
---
 index.html | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/index.html b/index.html
index bf1098d7..67cdfb89 100644
--- a/index.html
+++ b/index.html
@@ -339,6 +339,8 @@ <h3>Address Options</h3>
 						</div>
 
 						<input type="button" class="btn btn-primary" value="Generate" id="newKeysBtn">
+						<br><br>
+						<input type="button" class="btn btn-primary" value="Print Paperwallet" id="newPaperwalletBtn" disabled>
 						<br>
 					</div>
 
@@ -384,6 +386,8 @@ <h3>Address Options</h3>
 						</div>
 
 						<input type="button" class="btn btn-primary" value="Generate" id="newSegWitKeysBtn">
+						<br><br>
+						<input type="button" class="btn btn-primary" value="Print Paperwallet" id="newSegwitPaperwalletBtn" disabled>
 						<br>
 					</div>
 

From 488a8fae7e3d3090ef65d2aa5cc4e5421ed4569e Mon Sep 17 00:00:00 2001
From: oliverdorn <developer@verioweb.de>
Date: Sat, 25 Nov 2017 00:53:00 +0100
Subject: [PATCH 11/16] Added functionality for printing Paper Wallet

---
 js/coinbin.js | 27 ++++++++++++++++++++++++++-
 1 file changed, 26 insertions(+), 1 deletion(-)

diff --git a/js/coinbin.js b/js/coinbin.js
index e8e41609..e3b1ed1c 100644
--- a/js/coinbin.js
+++ b/js/coinbin.js
@@ -344,7 +344,19 @@ $(document).ready(function() {
 			$("#aes256passStatus").removeClass("hidden");
 		}
 		$("#newPrivKeyEnc").val(CryptoJS.AES.encrypt(coin.wif, $("#aes256pass").val())+'');
-
+		$("#newPaperwalletBtn").prop("disabled", false);
+	});
+	
+	$("#newPaperwalletBtn").click(function(){
+		var paperwallet = window.open();
+		paperwallet.document.write('<h1>BTC PaperWallet</h1><hr><div style="margin-top: 5px; margin-bottom: 10px"><div><h2 style="margin-top: 0">Address (Share)</h2></div><div style="text-align: center;"><div id="qraddress"></div><p>'+$("#newBitcoinAddress").val()+'</p></div></div><hr><div style="margin-top: 5px; margin-bottom: 10px"><div><h2 style="margin-top: 0">Public Key</h2></div><div style="text-align: center;"><div id="qrpubkey"></div><p>'+$("#newPubKey").val()+'</p></div></div><hr><hr><div style="margin-top: 5px; margin-bottom: 10px"><div><h2 style="margin-top: 0">Private Key (KEEP SECRET!)</h2></div><div style="text-align: center;"><div id="qrprivkey"></div><p>'+$("#newPrivKey").val()+'</p></div></div><hr>');
+		paperwallet.document.close();
+		paperwallet.focus();
+		new QRCode(paperwallet.document.getElementById("qraddress"), {text: $("#newBitcoinAddress").val(), width: 128, height: 128});
+		new QRCode(paperwallet.document.getElementById("qrpubkey"), {text: $("#newPubKey").val(), width: 128, height: 128});
+		new QRCode(paperwallet.document.getElementById("qrprivkey"), {text: $("#newPrivKey").val(), width: 128, height: 128});
+		paperwallet.print();
+		paperwallet.close();
 	});
 
 	$("#newBrainwallet").click(function(){
@@ -390,8 +402,21 @@ $(document).ready(function() {
 		$("#newSegWitPubKey").val(coin.pubkey);
 		$("#newSegWitPrivKey").val(coin.wif);
 		coinjs.compressed = compressed;
+		$("#newSegwitPaperwalletBtn").prop("disabled", false);
 	});
 
+	$("#newSegwitPaperwalletBtn").click(function(){
+		var paperwallet = window.open();
+		paperwallet.document.write('<h1>BTC SegWit PaperWallet</h1><hr><div style="margin-top: 5px; margin-bottom: 10px"><div><h2 style="margin-top: 0">Address (Share)</h2></div><div style="text-align: center;"><div id="qraddress"></div><p>'+$("#newSegWitAddress").val()+'</p></div></div><hr><div style="margin-top: 5px; margin-bottom: 10px"><div><h2 style="margin-top: 0">Public Key</h2></div><div style="text-align: center;"><div id="qrpubkey"></div><p>'+$("#newSegWitPubKey").val()+'</p></div></div><hr><div style="margin-top: 5px; margin-bottom: 10px"><div><h2 style="margin-top: 0">Redeem Script</h2></div><div style="text-align: center;"><div id="qrredeem"></div><p>'+$("#newSegWitRedeemScript").val()+'</p></div></div><hr><hr><div style="margin-top: 5px; margin-bottom: 10px"><div><h2 style="margin-top: 0">Private Key (KEEP SECRET!)</h2></div><div style="text-align: center;"><div id="qrprivkey"></div><p>'+$("#newSegWitPrivKey").val()+'</p></div></div><hr>');
+		paperwallet.document.close();
+		paperwallet.focus();
+		new QRCode(paperwallet.document.getElementById("qraddress"), {text: $("#newSegWitAddress").val(), width: 128, height: 128});
+		new QRCode(paperwallet.document.getElementById("qrpubkey"), {text: $("#newSegWitPubKey").val(), width: 128, height: 128});
+		new QRCode(paperwallet.document.getElementById("qrredeem"), {text: $("#newSegWitRedeemScript").val(), width: 128, height: 128});
+		new QRCode(paperwallet.document.getElementById("qrprivkey"), {text: $("#newSegWitPrivKey").val(), width: 128, height: 128});
+		paperwallet.print();
+		paperwallet.close();
+	});
 
 	/* new -> multisig code */
 

From 265b1ca5433cfab221b70ab851eff8f63936316a Mon Sep 17 00:00:00 2001
From: OutCast3k <OutCast3k@gmail.com>
Date: Fri, 24 May 2019 14:44:47 +0000
Subject: [PATCH 12/16] changes made to paper wallet

---
 index.html    | 27 +++++++++++++++++++++------
 js/coinbin.js | 30 ++++++++++++++++++------------
 sha1sum       |  7 ++++---
 3 files changed, 43 insertions(+), 21 deletions(-)

diff --git a/index.html b/index.html
index 67cdfb89..f42d700d 100644
--- a/index.html
+++ b/index.html
@@ -338,9 +338,16 @@ <h3>Address Options</h3>
 
 						</div>
 
-						<input type="button" class="btn btn-primary" value="Generate" id="newKeysBtn">
-						<br><br>
-						<input type="button" class="btn btn-primary" value="Print Paperwallet" id="newPaperwalletBtn" disabled>
+						<div class="btn-group">
+							<input type="button" class="btn btn-primary" value="Generate" id="newKeysBtn">
+							<button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
+								<span class="caret"></span>
+								<span class="sr-only">Toggle Dropdown</span>
+							</button>
+							<ul class="dropdown-menu">
+								<li><a href="#" id="newPaperwalletBtn">Print</a></li>
+							</ul>							
+						</div>
 						<br>
 					</div>
 
@@ -385,9 +392,17 @@ <h3>Address Options</h3>
 							<input type="text" class="form-control hidden" id="brainwalletSegWit">
 						</div>
 
-						<input type="button" class="btn btn-primary" value="Generate" id="newSegWitKeysBtn">
-						<br><br>
-						<input type="button" class="btn btn-primary" value="Print Paperwallet" id="newSegwitPaperwalletBtn" disabled>
+						<div class="btn-group">
+							<input type="button" class="btn btn-primary" value="Generate" id="newSegWitKeysBtn">
+							<button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
+								<span class="caret"></span>
+								<span class="sr-only">Toggle Dropdown</span>
+							</button>
+
+							<ul class="dropdown-menu">
+								<li><a href="#" id="newSegwitPaperwalletBtn">Print</a></li>
+							</ul>
+						</div>
 						<br>
 					</div>
 
diff --git a/js/coinbin.js b/js/coinbin.js
index e3b1ed1c..cf55b44a 100644
--- a/js/coinbin.js
+++ b/js/coinbin.js
@@ -344,17 +344,20 @@ $(document).ready(function() {
 			$("#aes256passStatus").removeClass("hidden");
 		}
 		$("#newPrivKeyEnc").val(CryptoJS.AES.encrypt(coin.wif, $("#aes256pass").val())+'');
-		$("#newPaperwalletBtn").prop("disabled", false);
 	});
 	
 	$("#newPaperwalletBtn").click(function(){
+		if($("#newBitcoinAddress").val()==""){
+			$("#newKeysBtn").click();
+		}
+
 		var paperwallet = window.open();
-		paperwallet.document.write('<h1>BTC PaperWallet</h1><hr><div style="margin-top: 5px; margin-bottom: 10px"><div><h2 style="margin-top: 0">Address (Share)</h2></div><div style="text-align: center;"><div id="qraddress"></div><p>'+$("#newBitcoinAddress").val()+'</p></div></div><hr><div style="margin-top: 5px; margin-bottom: 10px"><div><h2 style="margin-top: 0">Public Key</h2></div><div style="text-align: center;"><div id="qrpubkey"></div><p>'+$("#newPubKey").val()+'</p></div></div><hr><hr><div style="margin-top: 5px; margin-bottom: 10px"><div><h2 style="margin-top: 0">Private Key (KEEP SECRET!)</h2></div><div style="text-align: center;"><div id="qrprivkey"></div><p>'+$("#newPrivKey").val()+'</p></div></div><hr>');
+		paperwallet.document.write('<h2>BTC PaperWallet</h2><hr><div style="margin-top: 5px; margin-bottom: 5px"><div><h3 style="margin-top: 0">Address (Share)</h3></div><div style="text-align: center;"><div id="qraddress"></div><p>'+$("#newBitcoinAddress").val()+'</p></div></div><hr><div style="margin-top: 5px; margin-bottom: 5px"><div><h3 style="margin-top: 0">Public Key</h3></div><div style="text-align: center;"><div id="qrpubkey"></div><p>'+$("#newPubKey").val()+'</p></div></div><hr><div style="margin-top: 5px; margin-bottom: 5px"><div><h3 style="margin-top: 0">Private Key (KEEP SECRET!)</h3></div><div style="text-align: center;"><div id="qrprivkey"></div><p>'+$("#newPrivKey").val()+'</p></div></div>');
 		paperwallet.document.close();
 		paperwallet.focus();
-		new QRCode(paperwallet.document.getElementById("qraddress"), {text: $("#newBitcoinAddress").val(), width: 128, height: 128});
-		new QRCode(paperwallet.document.getElementById("qrpubkey"), {text: $("#newPubKey").val(), width: 128, height: 128});
-		new QRCode(paperwallet.document.getElementById("qrprivkey"), {text: $("#newPrivKey").val(), width: 128, height: 128});
+		new QRCode(paperwallet.document.getElementById("qraddress"), {text: $("#newBitcoinAddress").val(), width: 125, height: 125});
+		new QRCode(paperwallet.document.getElementById("qrpubkey"), {text: $("#newPubKey").val(), width: 125, height: 125});
+		new QRCode(paperwallet.document.getElementById("qrprivkey"), {text: $("#newPrivKey").val(), width: 125, height: 125});
 		paperwallet.print();
 		paperwallet.close();
 	});
@@ -402,18 +405,21 @@ $(document).ready(function() {
 		$("#newSegWitPubKey").val(coin.pubkey);
 		$("#newSegWitPrivKey").val(coin.wif);
 		coinjs.compressed = compressed;
-		$("#newSegwitPaperwalletBtn").prop("disabled", false);
 	});
 
 	$("#newSegwitPaperwalletBtn").click(function(){
+		if($("#newSegWitAddress").val()==""){
+			$("#newSegWitKeysBtn").click();
+		}
+
 		var paperwallet = window.open();
-		paperwallet.document.write('<h1>BTC SegWit PaperWallet</h1><hr><div style="margin-top: 5px; margin-bottom: 10px"><div><h2 style="margin-top: 0">Address (Share)</h2></div><div style="text-align: center;"><div id="qraddress"></div><p>'+$("#newSegWitAddress").val()+'</p></div></div><hr><div style="margin-top: 5px; margin-bottom: 10px"><div><h2 style="margin-top: 0">Public Key</h2></div><div style="text-align: center;"><div id="qrpubkey"></div><p>'+$("#newSegWitPubKey").val()+'</p></div></div><hr><div style="margin-top: 5px; margin-bottom: 10px"><div><h2 style="margin-top: 0">Redeem Script</h2></div><div style="text-align: center;"><div id="qrredeem"></div><p>'+$("#newSegWitRedeemScript").val()+'</p></div></div><hr><hr><div style="margin-top: 5px; margin-bottom: 10px"><div><h2 style="margin-top: 0">Private Key (KEEP SECRET!)</h2></div><div style="text-align: center;"><div id="qrprivkey"></div><p>'+$("#newSegWitPrivKey").val()+'</p></div></div><hr>');
+		paperwallet.document.write('<h2>BTC SegWit PaperWallet</h2><hr><div style="margin-top: 5px; margin-bottom: 5px"><div><h3 style="margin-top: 0">Address (Share)</h3></div><div style="text-align: center;"><div id="qraddress"></div><p>'+$("#newSegWitAddress").val()+'</p></div></div><hr><div style="margin-top: 5px; margin-bottom: 5px"><div><h3 style="margin-top: 0">Public Key</h3></div><div style="text-align: center;"><div id="qrpubkey"></div><p>'+$("#newSegWitPubKey").val()+'</p></div></div><hr><div style="margin-top: 5px; margin-bottom: 5px"><div><h3 style="margin-top: 0">Redeem Script</h3></div><div style="text-align: center;"><div id="qrredeem"></div><p>'+$("#newSegWitRedeemScript").val()+'</p></div></div><hr><div style="margin-top: 5px; margin-bottom: 5px"><div><h3 style="margin-top: 0">Private Key (KEEP SECRET!)</h3></div><div style="text-align: center;"><div id="qrprivkey"></div><p>'+$("#newSegWitPrivKey").val()+'</p></div></div>');
 		paperwallet.document.close();
 		paperwallet.focus();
-		new QRCode(paperwallet.document.getElementById("qraddress"), {text: $("#newSegWitAddress").val(), width: 128, height: 128});
-		new QRCode(paperwallet.document.getElementById("qrpubkey"), {text: $("#newSegWitPubKey").val(), width: 128, height: 128});
-		new QRCode(paperwallet.document.getElementById("qrredeem"), {text: $("#newSegWitRedeemScript").val(), width: 128, height: 128});
-		new QRCode(paperwallet.document.getElementById("qrprivkey"), {text: $("#newSegWitPrivKey").val(), width: 128, height: 128});
+		new QRCode(paperwallet.document.getElementById("qraddress"), {text: $("#newSegWitAddress").val(), width: 110, height: 110});
+		new QRCode(paperwallet.document.getElementById("qrpubkey"), {text: $("#newSegWitPubKey").val(), width: 110, height: 110});
+		new QRCode(paperwallet.document.getElementById("qrredeem"), {text: $("#newSegWitRedeemScript").val(), width: 110, height: 110});
+		new QRCode(paperwallet.document.getElementById("qrprivkey"), {text: $("#newSegWitPrivKey").val(), width: 110, height: 110});
 		paperwallet.print();
 		paperwallet.close();
 	});
@@ -2171,4 +2177,4 @@ $(document).ready(function() {
 		return true;
 	};
 
-});
\ No newline at end of file
+});
diff --git a/sha1sum b/sha1sum
index 13188375..f6caa02e 100644
--- a/sha1sum
+++ b/sha1sum
@@ -1,8 +1,8 @@
----- Version 1.4 2019.05.05 ---
+---- Version 1.4 2019.05.24 ---
 77e4519962e2f6a9fc93342137dbb31c33b76b04  ./js/aes.js
 3a09a8fc0cfe828b57fc798d668234d0490ee1a6  ./js/bootstrap-datetimepicker.min.js
 253711c6d825de55a8360552573be950da180614  ./js/bootstrap.min.js
-82b602589fb4cf9be970fb67a9fc1a9b504d8075  ./js/coinbin.js
+e78a1273d4e0d98fe7c24a991251f6bb8a0f0da7  .js/coinbin.js
 d7e828cea4e9af4934cc500d022cb1b6ce12cbb0  ./js/coin.js
 988565bc2cb402d63ed5c5fd7ff47c4278efc2c5  ./js/collapse.js
 9ba5ede3d7f9d4c8fd623395f196adfdcf7e970f  ./js/crypto-min.js
@@ -31,4 +31,5 @@ de51a8494180a6db074af2dee2383f0a363c5b08  ./fonts/glyphicons-halflings-regular.s
 278e49a86e634da6f2a02f3b47dd9d2a8f26210f  ./fonts/glyphicons-halflings-regular.woff
 44bc1850f570972267b169ae18f1cb06b611ffa2  ./fonts/glyphicons-halflings-regular.ttf
 c024021c71cba503979a859d23cbf7a88b570d82  ./README.md
-ec9ad10deec0de54879c05fcfe44a96270458265  ./index.html
+42541e9411de4550496cea79f2eb1edb4dcf2922  ./index.html
+

From 52267e6592d91cfef91c8b42f833246de2256040 Mon Sep 17 00:00:00 2001
From: OutCast3k <OutCast3k@gmail.com>
Date: Tue, 28 May 2019 15:21:58 +0000
Subject: [PATCH 13/16] removed blockchain.com links

---
 js/coinbin.js | 2 +-
 sha1sum       | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/js/coinbin.js b/js/coinbin.js
index cf55b44a..759ddd0a 100644
--- a/js/coinbin.js
+++ b/js/coinbin.js
@@ -1229,7 +1229,7 @@ $(document).ready(function() {
                         success: function(data) {
 				$("#rawTransactionStatus").html(unescape($(data).find("response").text()).replace(/\+/g,' ')).removeClass('hidden');
 				if($(data).find("result").text()==1){
-					$("#rawTransactionStatus").addClass('alert-success').removeClass('alert-danger').removeClass("hidden").html(' TXID: ' + $(data).find("txid").text() + '<br> <a href="https://www.blockchain.com/btc/tx/' + $(data).find("txid").text() + '" target="_blank">View on Blockchain Explorer</a>');
+					$("#rawTransactionStatus").addClass('alert-success').removeClass('alert-danger').removeClass("hidden").html(' TXID: ' + $(data).find("txid").text() + '<br> <a href="https://coinb.in/tx/' + $(data).find("txid").text() + '" target="_blank">View on Blockchain</a>');
 				} else {
 					$("#rawTransactionStatus").addClass('alert-danger').removeClass('alert-success').prepend('<span class="glyphicon glyphicon-exclamation-sign"></span> ');
 				}
diff --git a/sha1sum b/sha1sum
index f6caa02e..fa452b2c 100644
--- a/sha1sum
+++ b/sha1sum
@@ -2,7 +2,7 @@
 77e4519962e2f6a9fc93342137dbb31c33b76b04  ./js/aes.js
 3a09a8fc0cfe828b57fc798d668234d0490ee1a6  ./js/bootstrap-datetimepicker.min.js
 253711c6d825de55a8360552573be950da180614  ./js/bootstrap.min.js
-e78a1273d4e0d98fe7c24a991251f6bb8a0f0da7  .js/coinbin.js
+c151bb100bb186b58407b18055d354abca92042a  ./js/coinbin.js
 d7e828cea4e9af4934cc500d022cb1b6ce12cbb0  ./js/coin.js
 988565bc2cb402d63ed5c5fd7ff47c4278efc2c5  ./js/collapse.js
 9ba5ede3d7f9d4c8fd623395f196adfdcf7e970f  ./js/crypto-min.js

From 71d440a1d1121d3924418f2618ca7ed81c75800f Mon Sep 17 00:00:00 2001
From: OutCast3k <OutCast3k@gmail.com>
Date: Wed, 5 Jun 2019 19:34:45 +0000
Subject: [PATCH 14/16] change made to avoid captcha provided by cloudflare to
 TOR users

---
 index.html    |  18 ++++-
 js/coin.js    |   3 +-
 js/coinbin.js | 199 +++++++++++++++++++++++++++++++-------------------
 sha1sum       |   8 +-
 4 files changed, 145 insertions(+), 83 deletions(-)

diff --git a/index.html b/index.html
index f42d700d..d0df43e3 100644
--- a/index.html
+++ b/index.html
@@ -1353,8 +1353,8 @@ <h2>Settings <small> making coinb.in even better!</small></h2>
 								<p class="text-muted">Select which network you'd like to use for key pair generation.</p>
 								<select class="form-control" id="coinjs_coin">
 									<option value="bitcoin_mainnet" rel="0x00;0x80;0x05;0x488b21e;0x488ade4;coinb.in;coinb.in">Bitcoin (mainnet)</option>
-									<option value="litecoin_mainnet" rel="0x30;0xb0;0x32;0x019da462;0x019d9cfe;chain.so_litecoin;chain.so_litecoin">Litecoin (mainnet)</option>
-									<option value="dogecoin_mainnet" rel="0x1e;0x9e;0x16;0x0827421e;0x089944e4;chain.so_dogecoin;chain.so_dogecoin">Dogecoin (mainnet)</option>
+									<option value="litecoin_mainnet" rel="0x30;0xb0;0x32;0x019da462;0x019d9cfe;blockcypher_litecoin;blockcypher_litecoin">Litecoin (mainnet)</option>
+									<option value="dogecoin_mainnet" rel="0x1e;0x9e;0x16;0x0827421e;0x089944e4;blockcypher_dogecoin;blockcypher_dogecoin">Dogecoin (mainnet)</option>
 									<option value="carboncoin_mainnet" rel="0x2f;0xaf;0x05;0x488b21e;0x488ade4;cryptoid.info_carboncoin;cryptoid.info_carboncoin">Carboncoin (mainnet)</option>
 									<option value="shadowcash_mainnet" rel="0x3f;0xbf;0x7d;0xee80286a;0xee8031e8;false;false">ShadowCash (mainnet)</option>
 									<option value="bitcoin_testnet" rel="0x6f;0xef;0xc4;0x043587cf;0x04358394;false;false">Bitcoin (testnet)</option>
@@ -1411,8 +1411,13 @@ <h2>Settings <small> making coinb.in even better!</small></h2>
 								<p class="text-muted">Select the network you wish to broadcast the transaction via</p>
 								<select class="form-control" id="coinjs_broadcast">
 									<option value="coinb.in">coinb.in (Bitcoin mainnet)</option>
-									<option value="chain.so_bitcoinmainnet"> Chain.so (Bitcoin mainnet)</option>
 									<option value="blockcypher_bitcoinmainnet"> Blockcypher.com (Bitcoin mainnet)</option>
+									<option value="blockcypher_litecoin"> Blockcypher.com (Litecoin)</option>
+									<option value="blockcypher_dogecoin"> Blockcypher.com (Dogecoin)</option>
+									<option value="blockchair_bitcoinmainnet"> Blockchair.com (Bitcoin mainnet)</option>
+									<option value="blockchair_litecoin"> Blockchair.com (Litecoin)</option>
+									<option value="blockchair_dogecoin"> Blockchair.com (Dogecoin)</option>
+									<option value="chain.so_bitcoinmainnet"> Chain.so (Bitcoin mainnet)</option>
 									<option value="chain.so_litecoin"> Chain.so (Litecoin)</option>
 									<option value="chain.so_dogecoin"> Chain.so (Dogecoin)</option>
 									<option value="cryptoid.info_carboncoin"> Cryptoid.info (Carboncoin)</option>
@@ -1428,6 +1433,13 @@ <h2>Settings <small> making coinb.in even better!</small></h2>
 								<p class="text-muted">Select the network you wish to retreive your unspent inputs from</p>
 								<select class="form-control" id="coinjs_utxo">
 									<option value="coinb.in">coinb.in (Bitcoin mainnet)</option>
+									<option value="blockcypher_bitcoinmainnet"> Blockcypher.com (Bitcoin mainnet)</option>
+									<option value="blockcypher_litecoin"> Blockcypher.com (Litecoin)</option>
+									<option value="blockcypher_dogecoin"> Blockcypher.com (Dogecoin)</option>
+									<option value="blockchair_bitcoinmainnet"> Blockchair.com (Bitcoin mainnet)</option>
+									<option value="blockchair_litecoin"> Blockchair.com (Litecoin)</option>
+									<option value="blockchair_dogecoin"> Blockchair.com (Dogecoin)</option>
+									<option value="chain.so_bitcoinmainnet"> Chain.so (Bitcoin mainnet)</option>
 									<option value="chain.so_litecoin"> Chain.so (Litecoin)</option>
 									<option value="chain.so_dogecoin"> Chain.so (Dogecoin)</option>
 									<option value="cryptoid.info_carboncoin"> Cryptoid.info (Carboncoin)</option>
diff --git a/js/coin.js b/js/coin.js
index 87a94a68..b25c197c 100644
--- a/js/coin.js
+++ b/js/coin.js
@@ -22,7 +22,8 @@
 	coinjs.developer = '3K1oFZMks41C7qDYBsr72SYjapLqDuSYuN'; //bitcoin
 
 	/* bit(coinb.in) api vars */
-	coinjs.host = ('https:'==document.location.protocol?'https://':'http://')+'coinb.in/api/';
+	coinjs.hostname	= ((document.location.hostname.split(".")[(document.location.hostname.split(".")).length-1]) == 'onion') ? '4zpinp6gdkjfplhk.onion' : 'coinb.in';
+	coinjs.host = ('https:'==document.location.protocol?'https://':'http://')+coinjs.hostname+'/api/';
 	coinjs.uid = '1';
 	coinjs.key = '12345678901234567890123456789012';
 
diff --git a/js/coinbin.js b/js/coinbin.js
index 759ddd0a..6a42fdda 100644
--- a/js/coinbin.js
+++ b/js/coinbin.js
@@ -907,10 +907,32 @@ $(document).ready(function() {
 
 		var host = $(this).attr('rel');
 
-		if(host=='chain.so_litecoin'){
-			listUnspentChainso_Litecoin(redeem);
+        // api:             blockcypher     blockchair      chain.so
+        // network name     "btc"           "bitcoin"       "BTC"
+        // network name     "ltc"           "litecoin"      "LTC"
+        // network name     "doge"          "dogecoin"      "DOGE"
+
+		if(host=='chain.so_bitcoinmainnet'){
+			listUnspentChainso(redeem, "BTC");
+        } else if(host=='chain.so_litecoin'){
+			listUnspentChainso(redeem, "LTC");
 		} else if(host=='chain.so_dogecoin'){
-			listUnspentChainso_Dogecoin(redeem);
+			listUnspentChainso(redeem, "DOGE");
+
+		} else if(host=='blockcypher_bitcoinmainnet'){
+			listUnspentBlockcypher(redeem, "btc");
+        } else if(host=='blockcypher_litecoin'){
+			listUnspentBlockcypher(redeem, "ltc");
+		} else if(host=='blockcypher_dogecoin'){
+			listUnspentBlockcypher(redeem, "doge");
+
+		} else if(host=='blockchair_bitcoinmainnet'){
+			listUnspentBlockchair(redeem, "bitcoin");
+        } else if(host=='blockchair_litecoin'){
+			listUnspentBlockchair(redeem, "litecoin");
+		} else if(host=='blockchair_dogecoin'){
+			listUnspentBlockchair(redeem, "dogecoin");
+
 		} else if(host=='cryptoid.info_carboncoin'){
 			listUnspentCryptoidinfo_Carboncoin(redeem);
 		} else {
@@ -1054,25 +1076,26 @@ $(document).ready(function() {
 	}
 
 
-	/* retrieve unspent data from chainso for litecoin */
-	function listUnspentChainso_Litecoin(redeem){
+	/* retrieve unspent data from blockcypher */
+	function listUnspentBlockcypher(redeem,network){
 		$.ajax ({
 			type: "GET",
-			url: "https://chain.so/api/v2/get_tx_unspent/ltc/"+redeem.addr,
+			url: "https://api.blockcypher.com/v1/"+network+"/main/addrs/"+redeem.addr+"?includeScript=true&unspentOnly=true",
 			dataType: "json",
 			error: function(data) {
 				$("#redeemFromStatus").removeClass('hidden').html('<span class="glyphicon glyphicon-exclamation-sign"></span> Unexpected error, unable to retrieve unspent outputs!');
 			},
 			success: function(data) {
-				if((data.status && data.data) && data.status=='success'){
-					$("#redeemFromAddress").removeClass('hidden').html('<span class="glyphicon glyphicon-info-sign"></span> Retrieved unspent inputs from address <a href="'+explorer_addr+redeem.addr+'" target="_blank">'+redeem.addr+'</a>');
-					for(var i in data.data.txs){
-						var o = data.data.txs[i];
-						var tx = ((""+o.txid).match(/.{1,2}/g).reverse()).join("")+'';
+				if (data.address) { // address field will always be present, txrefs is only present if there are UTXOs
+					$("#redeemFromAddress").removeClass('hidden').html(
+						'<span class="glyphicon glyphicon-info-sign"></span> Retrieved unspent inputs from address <a href="'+explorer_addr+redeem.addr+'" target="_blank">'+redeem.addr+'</a>');
+					for(var i in data.txrefs){
+                        var o = data.txrefs[i]
+						var tx = ((""+o.tx_hash).match(/.{1,2}/g).reverse()).join("")+'';
 						if(tx.match(/^[a-f0-9]+$/)){
-							var n = o.output_no;
-							var script = (redeem.redeemscript==true) ? redeem.decodedRs : o.script_hex;
-							var amount = o.value;
+							var n = o.tx_output_n;
+							var script = (redeem.redeemscript==true) ? redeem.decodedRs : o.script;
+							var amount = ((o.value.toString()*1)/100000000).toFixed(8);
 							addOutput(tx, n, script, amount);
 						}
 					}
@@ -1121,19 +1144,54 @@ $(document).ready(function() {
 
 	}
 
-	/* retrieve unspent data from chain.so for dogecoin */
-	function listUnspentChainso_Dogecoin(redeem){
+
+	/* retrieve unspent data from blockchair */
+	function listUnspentBlockchair(redeem,network){
 		$.ajax ({
 			type: "GET",
-			url: "https://chain.so/api/v2/get_tx_unspent/doge/"+redeem.addr,
+			url: "https://api.blockchair.com/"+network+"/dashboards/address/"+redeem.addr,
+			dataType: "json",
+			error: function(data) {
+				$("#redeemFromStatus").removeClass('hidden').html('<span class="glyphicon glyphicon-exclamation-sign"></span> Unexpected error, unable to retrieve unspent outputs!');
+			},
+			success: function(data) {
+				if((data.context && data.data) && data.context.code =='200'){
+					$("#redeemFromAddress").removeClass('hidden').html('<span class="glyphicon glyphicon-info-sign"></span> Retrieved unspent inputs from address <a href="'+explorer_addr+redeem.addr+'" target="_blank">'+redeem.addr+'</a>');
+					var all_info = data.data[redeem.addr];
+					for(var i in all_info.utxo){
+						var o = all_info.utxo[i];
+						var tx = ((""+o.transaction_hash).match(/.{1,2}/g).reverse()).join("")+'';
+						if(tx.match(/^[a-f0-9]+$/)){
+							var n = o.index;
+							var script = (redeem.redeemscript==true) ? redeem.decodedRs : all_info.address.script_hex;
+							var amount = ((o.value.toString()*1)/100000000).toFixed(8);
+							addOutput(tx, n, script, amount);
+						}
+					}
+				} else {
+					$("#redeemFromStatus").removeClass('hidden').html('<span class="glyphicon glyphicon-exclamation-sign"></span> Unexpected error, unable to retrieve unspent outputs.');
+				}
+			},
+			complete: function(data, status) {
+				$("#redeemFromBtn").html("Load").attr('disabled',false);
+				totalInputAmount();
+			}
+		});
+	}
+
+
+	/* retrieve unspent data from chainso */
+	function listUnspentChainso(redeem, network){
+		$.ajax ({
+			type: "GET",
+			url: "https://chain.so/api/v2/get_tx_unspent/"+network+"/"+redeem.addr,
 			dataType: "json",
 			error: function(data) {
 				$("#redeemFromStatus").removeClass('hidden').html('<span class="glyphicon glyphicon-exclamation-sign"></span> Unexpected error, unable to retrieve unspent outputs!');
 			},
 			success: function(data) {
 				if((data.status && data.data) && data.status=='success'){
-					$("#redeemFromAddress").removeClass('hidden').html(
-						'<span class="glyphicon glyphicon-info-sign"></span> Retrieved unspent inputs from address <a href="'+explorer_addr+redeem.addr+'" target="_blank">'+redeem.addr+'</a>');
+					$("#redeemFromAddress").removeClass('hidden').html('<span class="glyphicon glyphicon-info-sign"></span> Retrieved unspent inputs from address <a href="'+explorer_addr+redeem.addr+'" target="_blank">'+redeem.addr+'</a>');
 					for(var i in data.data.txs){
 						var o = data.data.txs[i];
 						var tx = ((""+o.txid).match(/.{1,2}/g).reverse()).join("")+'';
@@ -1155,6 +1213,7 @@ $(document).ready(function() {
 		});
 	}
 
+
 	/* math to calculate the inputs and outputs */
 
 	function totalInputAmount(){
@@ -1268,11 +1327,11 @@ $(document).ready(function() {
 	}
 
 	// broadcast transaction via chain.so (mainnet)
-	function rawSubmitChainso_BitcoinMainnet(thisbtn){ 
+	function rawSubmitChainso(thisbtn, network){ 
 		$(thisbtn).val('Please wait, loading...').attr('disabled',true);
 		$.ajax ({
 			type: "POST",
-			url: "https://chain.so/api/v2/send_tx/BTC/",
+			url: "https://chain.so/api/v2/send_tx/"+network+"/",
 			data: {"tx_hex":$("#rawTransaction").val()},
 			dataType: "json",
 			error: function(data) {
@@ -1284,7 +1343,7 @@ $(document).ready(function() {
 			},
                         success: function(data) {
 				if(data.status && data.data.txid){
-					$("#rawTransactionStatus").addClass('alert-success').removeClass('alert-danger').removeClass("hidden").html(' TXID: ' + data.data.txid + '<br> <a href="https://chain.so/tx/BTC/' + data.data.txid + '" target="_blank">View on Blockchain Explorer</a>');
+					$("#rawTransactionStatus").addClass('alert-success').removeClass('alert-danger').removeClass("hidden").html(' TXID: ' + data.data.txid + '<br> <a href="https://chain.so/tx/'+network+'/' + data.data.txid + '" target="_blank">View on Blockchain Explorer</a>');
 				} else {
 					$("#rawTransactionStatus").addClass('alert-danger').removeClass('alert-success').removeClass("hidden").html(' Unexpected error, please try again').prepend('<span class="glyphicon glyphicon-exclamation-sign"></span>');
 				}				
@@ -1297,22 +1356,20 @@ $(document).ready(function() {
 	}
 
 	// broadcast transaction via blockcypher.com (mainnet)
-	function rawSubmitblockcypher_BitcoinMainnet(thisbtn){ 
+	function rawSubmitblockcypher(thisbtn, network){ 
 		$(thisbtn).val('Please wait, loading...').attr('disabled',true);
 		$.ajax ({
 			type: "POST",
-			url: "https://api.blockcypher.com/v1/btc/main/txs/push",
+			url: "https://api.blockcypher.com/v1/"+network+"/main/txs/push",
 			data: JSON.stringify({"tx":$("#rawTransaction").val()}),
 			error: function(data) {
-				var obj = $.parseJSON(data.responseText);
-				var r = ' ';
-				r += (obj.error) ? obj.error : '';
-				r = (r!='') ? r : ' Failed to broadcast'; // build response 
+				var r = 'Failed to broadcast: error code=' + data.status.toString() + ' ' + data.statusText;
 				$("#rawTransactionStatus").addClass('alert-danger').removeClass('alert-success').removeClass("hidden").html(r).prepend('<span class="glyphicon glyphicon-exclamation-sign"></span>');
 			},
                         success: function(data) {
 				if((data.tx) && data.tx.hash){
-					$("#rawTransactionStatus").addClass('alert-success').removeClass('alert-danger').removeClass("hidden").html(' TXID: ' + data.tx.hash + '<br> <a href="https://live.blockcypher.com/btc/tx/' + data.tx.hash + '" target="_blank">View on Blockchain Explorer</a>');
+					$("#rawTransactionStatus").addClass('alert-success').removeClass('alert-danger').removeClass("hidden")
+                    .html(' TXID: ' + data.tx.hash + '<br> <a href="https://live.blockcypher.com/'+network+'/tx/' + data.tx.hash + '" target="_blank">View on Blockchain Explorer</a>');
 				} else {
 					$("#rawTransactionStatus").addClass('alert-danger').removeClass('alert-success').removeClass("hidden").html(' Unexpected error, please try again').prepend('<span class="glyphicon glyphicon-exclamation-sign"></span>');
 				}
@@ -1324,58 +1381,24 @@ $(document).ready(function() {
 		});
 	}
 
-
-	// broadcast transaction via chain.so for litecoin
-	function rawSubmitchainso_litecoin(thisbtn){ 
+	// broadcast transaction via blockchair
+	function rawSubmitblockchair(thisbtn, network){
 		$(thisbtn).val('Please wait, loading...').attr('disabled',true);
                 $.ajax ({
                         type: "POST",
-                        url: "https://chain.so/api/v2/send_tx/LTC",
-            			data: {"tx_hex":$("#rawTransaction").val()},
+                        url: "https://api.blockchair.com/"+network+"/push/transaction",
+                        data: {"data":$("#rawTransaction").val()},
                         dataType: "json",
                         error: function(data) {
-				var obj = $.parseJSON(data.responseText);
-				var r = ' ';
-				r += (obj.data.tx_hex) ? ' '+obj.data.tx_hex : '';
-				r = (r!='') ? r : ' Failed to broadcast'; // build response 
+				var r = 'Failed to broadcast: error code=' + data.status.toString() + ' ' + data.statusText;
 				$("#rawTransactionStatus").addClass('alert-danger').removeClass('alert-success').removeClass("hidden").html(r).prepend('<span class="glyphicon glyphicon-exclamation-sign"></span>');
 			//	console.error(JSON.stringify(data, null, 4));
                         },
                         success: function(data) {
 			//	console.info(JSON.stringify(data, null, 4));
-				if((data.status && data.data) && data.status=='success'){
-					$("#rawTransactionStatus").addClass('alert-success').removeClass('alert-danger').removeClass("hidden").html(' TXID: ' + data.data.txid + '<br> <a href="https://chain.so/tx/LTC/' + data.data.txid + '" target="_blank">View on Blockchain Explorer</a>');
-				} else {
-					$("#rawTransactionStatus").addClass('alert-danger').removeClass('alert-success').removeClass("hidden").html(' Unexpected error, please try again').prepend('<span class="glyphicon glyphicon-exclamation-sign"></span>');
-				}
-			},
-			complete: function(data, status) {
-				$("#rawTransactionStatus").fadeOut().fadeIn();
-				$(thisbtn).val('Submit').attr('disabled',false);				
-                        }
-                });
-	}
-
-	// broadcast transaction via chain.so for dogecoin
-	function rawSubmitchainso_dogecoin(thisbtn){ 
-		$(thisbtn).val('Please wait, loading...').attr('disabled',true);
-                $.ajax ({
-                        type: "POST",
-                        url: "https://chain.so/api/v2/send_tx/DOGE",
-			data: {"tx_hex":$("#rawTransaction").val()},
-                        dataType: "json",
-                        error: function(data) {
-				var obj = $.parseJSON(data.responseText);
-				var r = ' ';
-				r += (obj.data.tx_hex) ? ' '+obj.data.tx_hex : '';
-				r = (r!='') ? r : ' Failed to broadcast'; // build response 
-				$("#rawTransactionStatus").addClass('alert-danger').removeClass('alert-success').removeClass("hidden").html(r).prepend('<span class="glyphicon glyphicon-exclamation-sign"></span>');
-			//	console.error(JSON.stringify(data, null, 4));
-                        },
-                        success: function(data) {
-			//	console.info(JSON.stringify(data, null, 4));
-				if((data.status && data.data) && data.status=='success'){
-					$("#rawTransactionStatus").addClass('alert-success').removeClass('alert-danger').removeClass("hidden").html(' TXID: ' + data.data.txid + '<br> <a href="https://chain.so/tx/DOGE/' + data.data.txid + '" target="_blank">View on Blockchain Explorer</a>');
+				if((data.context && data.data) && data.context.code=='200'){
+					$("#rawTransactionStatus").addClass('alert-success').removeClass('alert-danger').removeClass("hidden")
+                    .html(' TXID: ' + data.data.transaction_hash + '<br> <a href="https://blockchair.com/'+network+'/transaction/' + data.data.transaction_hash + '" target="_blank">View on Blockchain Explorer</a>');
 				} else {
 					$("#rawTransactionStatus").addClass('alert-danger').removeClass('alert-success').removeClass("hidden").html(' Unexpected error, please try again').prepend('<span class="glyphicon glyphicon-exclamation-sign"></span>');
 				}
@@ -1888,22 +1911,48 @@ $(document).ready(function() {
 
 	function configureBroadcast(){
 		var host = $("#coinjs_broadcast option:selected").val();
+
+        // api:             blockcypher     blockchair      chain.so
+        // network name     "btc"           "bitcoin"       "BTC"
+        // network name     "ltc"           "litecoin"      "LTC"
+        // network name     "doge"          "dogecoin"      "DOGE"
+
 		$("#rawSubmitBtn").unbind("");
 		if(host=="chain.so_bitcoinmainnet"){
 			$("#rawSubmitBtn").click(function(){
-				rawSubmitChainso_BitcoinMainnet(this);
+				rawSubmitChainso(this, "BTC");
 			});
 		} else if(host=="chain.so_litecoin"){
 			$("#rawSubmitBtn").click(function(){
-				rawSubmitchainso_litecoin(this);
+				rawSubmitchainso(this, "LTC");
 			});
 		} else if(host=="chain.so_dogecoin"){
 			$("#rawSubmitBtn").click(function(){
-				rawSubmitchainso_dogecoin(this);
+				rawSubmitchainso(this, "DOGE");
 			});
 		} else if(host=="blockcypher_bitcoinmainnet"){
 			$("#rawSubmitBtn").click(function(){
-				rawSubmitblockcypher_BitcoinMainnet(this);
+				rawSubmitblockcypher(this, "btc");
+			});
+		} else if(host=="blockcypher_litecoin"){
+			$("#rawSubmitBtn").click(function(){
+				rawSubmitblockcypher(this, "ltc");
+			});
+		} else if(host=="blockcypher_dogecoin"){
+			$("#rawSubmitBtn").click(function(){
+				rawSubmitblockcypher(this, "doge");
+			});
+		} else if(host=="blockchair_bitcoinmainnet"){
+			$("#rawSubmitBtn").click(function(){
+				rawSubmitblockchair(this, "bitcoin");
+			});
+		} else if(host=="blockchair_litecoin"){
+			$("#rawSubmitBtn").click(function(){
+				rawSubmitblockchair(this, "litecoin");
+			});
+		} else if(host=="blockchair_dogecoin"){
+			$("#rawSubmitBtn").click(function(){
+				rawSubmitblockchair(this, "dogecoin");
 			});
 		} else if(host=="cryptoid.info_carboncoin"){
 			$("#rawSubmitBtn").click(function(){
diff --git a/sha1sum b/sha1sum
index fa452b2c..f25bee5d 100644
--- a/sha1sum
+++ b/sha1sum
@@ -1,9 +1,9 @@
----- Version 1.4 2019.05.24 ---
+---- Version 1.4 2019.09.22 ----
 77e4519962e2f6a9fc93342137dbb31c33b76b04  ./js/aes.js
 3a09a8fc0cfe828b57fc798d668234d0490ee1a6  ./js/bootstrap-datetimepicker.min.js
 253711c6d825de55a8360552573be950da180614  ./js/bootstrap.min.js
-c151bb100bb186b58407b18055d354abca92042a  ./js/coinbin.js
-d7e828cea4e9af4934cc500d022cb1b6ce12cbb0  ./js/coin.js
+ad78fbfe50828c366100426609976c8c56085a0d  ./js/coinbin.js
+8f1286e72a6b06259ba1892e532cb35b11c88c37  ./js/coin.js
 988565bc2cb402d63ed5c5fd7ff47c4278efc2c5  ./js/collapse.js
 9ba5ede3d7f9d4c8fd623395f196adfdcf7e970f  ./js/crypto-min.js
 f7c09f2f5a721371e7d478050119f7e2d58e3ef9  ./js/crypto-sha256-hmac.js
@@ -31,5 +31,5 @@ de51a8494180a6db074af2dee2383f0a363c5b08  ./fonts/glyphicons-halflings-regular.s
 278e49a86e634da6f2a02f3b47dd9d2a8f26210f  ./fonts/glyphicons-halflings-regular.woff
 44bc1850f570972267b169ae18f1cb06b611ffa2  ./fonts/glyphicons-halflings-regular.ttf
 c024021c71cba503979a859d23cbf7a88b570d82  ./README.md
-42541e9411de4550496cea79f2eb1edb4dcf2922  ./index.html
+b3d3e947ebacce5aabfc3af57cbd0e094d06a8c9  ./index.html
 

From 50fbc01431d3512720f20b1e3377b3e40e9265e1 Mon Sep 17 00:00:00 2001
From: Wowee0 <co81407@coxj.com>
Date: Thu, 31 Oct 2019 12:01:41 -0500
Subject: [PATCH 15/16] message sign & verify functionality

---
 index.html    |  61 ++++++++++++-
 js/coin.js    | 230 +++++++++++++++++++++++++++++++++++++++++++++++++-
 js/coinbin.js | 164 +++++++++++++++++++++++++++--------
 3 files changed, 416 insertions(+), 39 deletions(-)

diff --git a/index.html b/index.html
index d0df43e3..93e7f0a5 100644
--- a/index.html
+++ b/index.html
@@ -979,10 +979,30 @@ <h2>Verify <small>transactions and other scripts</small></h2>
 							<div class="col-md-12">
 								<p>Enter the raw transaction, redeem script, pubkey, hd address or wif key to convert it into a readable format that can be verified manually.</p>
 								<textarea type="text" id="verifyScript" class="form-control" style="height:125px"></textarea>
+								<br />
+
+								<a href="javascript:;" id="verifyAdvancedCollapse">
+									<div class="well well-sm"><span class="glyphicon glyphicon-collapse-down"></span> Advanced Options</div>
+								</a>
+
+								<div id="verifyAdvanced" class="hidden">
+									<div class="row">
+										<div class="col-md-12">
+										<label><input type="checkbox" id="chkVerifyMessage" class="checkbox-inline">Verify a signed message</label>
+										</div>
+									</div>
+								</div>
 							</div>
 						</div>
 						<br>
 
+						<div class="hidden verifyData" id="verifyMessageData">
+							<p>Enter the information necessary to verify the signed message:</p>
+							<p><b>Address</b>: <input type="text" class="form-control address"></p>
+							<p><b>Signature</b>: <input type="text" class="form-control signature"></p>
+							<br />
+						</div>
+
 						<div class="hidden verifyData" id="verifyRsData">
 
 							<h4>Redeem Script</h4>
@@ -1285,6 +1305,38 @@ <h2>Sign Transaction <small>once a transaction has been verified</small></h2>
 							<div class="alert alert-info" id="sighashTypeInfo">
 								SIGHASH_ALL: The default, signs all the inputs and outputs, protecting everything except the signature scripts against modification.
 							</div>
+
+							<div class="row">
+								<div class="col-md-12">
+								<label><input type="checkbox" id="chkSignMessage" class="checkbox-inline">Sign a text message</label>
+
+								<div class="hidden signData" id="signMessageData">
+									<div class="col-xs-3">
+										Address type
+										<select id="sigAddressType" class="form-control">
+											<option selected>p2pkh</option>
+											<option>p2sh(p2wpkh)</option>
+											<option>p2wpkh</option>
+										</select>
+									</div>
+									<div class="col-xs-10">
+									<label>Address</label><span class="text-muted"> (for verifying)</span>
+									<div class="input-group-btn">
+										<input id="newSignPub" type="text" class="form-control" value="" readonly>
+									</div>
+									<label>Signature</label>
+									<div class="input-group-btn">
+										<input id="newSignSig" type="text" class="form-control" value="" readonly>
+									</div>
+									</div>
+									<br />
+									<br />
+									<br />
+									<br />
+								</div>
+							</div>
+
+
 						</div>
 
 						<div class="alert alert-danger hidden" id="signedDataError">
@@ -1387,15 +1439,20 @@ <h2>Settings <small> making coinb.in even better!</small></h2>
 
 
 							<div class="row">
-								<div class="col-md-6">
+								<div class="col-md-4">
 									<b>HD Pub</b>: <br>
 									<input type="text" class="form-control coinjssetting" id="coinjs_hdpub">
 								</div>
 
-								<div class="col-md-6">
+								<div class="col-md-4">
 									<b>HD Priv</b>: <br>
 									<input type="text" class="form-control coinjssetting" id="coinjs_hdprv">
 								</div>
+
+								<div class="col-md-4">
+									<b>Network</b>: <br>
+									<input type="text" class="form-control" id="coinjs_network">
+								</div>
 							</div>
 
 							<br>
diff --git a/js/coin.js b/js/coin.js
index b25c197c..0e6fbae5 100644
--- a/js/coin.js
+++ b/js/coin.js
@@ -10,6 +10,7 @@
 	var coinjs = window.coinjs = function () { };
 
 	/* public vars */
+	coinjs.network = "bitcoin_mainnet";
 	coinjs.pub = 0x00;
 	coinjs.priv = 0x80;
 	coinjs.multisig = 0x05;
@@ -1388,7 +1389,7 @@
 			// some necessary things out of the way for clarity.
 			badrs = badrs || 0;
 			var key = coinjs.wif2privkey(wif);
-			var x = Crypto.util.hexToBytes(key['privkey'])
+			var x = Crypto.util.hexToBytes(key['privkey']);
 			var curve = EllipticCurve.getSECCurveByName("secp256k1");
 			var N = curve.getN();
 
@@ -1746,6 +1747,159 @@
 
 	/* start of signature vertification functions */
 
+	// method for signing a message
+	coinjs.MsgSig = function(wif, message, bip0137) {
+		var hash = Crypto.SHA256(Crypto.SHA256(message,{asBytes: true}),{asBytes: true});
+		var curve = EllipticCurve.getSECCurveByName("secp256k1");
+		var key = coinjs.wif2privkey(wif);
+		var priv = BigInteger.fromByteArrayUnsigned(Crypto.util.hexToBytes(key['privkey']));
+		var n = curve.getN();
+		var e = BigInteger.fromByteArrayUnsigned(hash);
+		var badrs = 0;
+		var recId = 1;
+		do {
+			var k = coinjs.transaction().deterministicK(wif, hash, badrs);
+			var G = curve.getG();
+			var Q = G.multiply(k);
+			var r = Q.getX().toBigInteger().mod(n);
+			var s = k.modInverse(n).multiply(e.add(priv.multiply(r))).mod(n);
+			if (Q.getY().toBigInteger().mod(n).isEven()) {
+				recId = 0;
+			}
+			badrs++
+		} while (r.compareTo(BigInteger.ZERO) <= 0 || s.compareTo(BigInteger.ZERO) <= 0);
+
+		// Force lower s values per BIP62
+		var halfn = n.shiftRight(1);
+		if (s.compareTo(halfn) > 0) {
+			s = n.subtract(s);
+			recId ^= 1;
+		};
+
+		var rBa = r.toByteArraySigned();
+		var sBa = s.toByteArraySigned();
+		var rec = 0;
+		if (rBa.length > 32 && rBa[0] == 0) {
+			rBa.splice(0,1);	// remove first 0 element
+		}
+		var derivedAddress = "";
+
+		// bip0137: recId encodes address type and key derivation info
+		if (bip0137 == "p2pkh") {
+			if (key['compressed'] == false)	{
+				recId = recId + 27;
+			}
+			else {
+				recId = recId + 31;
+			}
+			derivedAddress = coinjs.wif2address(wif);
+		}
+		else if (bip0137 == "p2sh(p2wpkh)") {
+			recId = recId + 35;
+			derivedAddress = coinjs.segwitAddress(coinjs.wif2pubkey(wif).pubkey);
+		}
+		else if (bip0137 == "p2wpkh") {
+			recId = recId + 39;
+			derivedAddress = coinjs.bech32Address(coinjs.wif2pubkey(wif).pubkey);
+		}
+		var signature = [];
+		signature.push(recId);
+		signature = signature.concat(rBa).concat(sBa);
+		return {'address':derivedAddress, 'signature':signature};
+	}
+
+	/*
+	https://tools.ietf.org/html/rfc6979
+	https://stackoverflow.com/questions/19665491/how-do-i-get-an-ecdsa-public-key-from-just-a-bitcoin-signature-sec1-4-1-6-k
+	https://crypto.stackexchange.com/questions/18105/how-does-recovering-the-public-key-from-an-ecdsa-signature-work/18106#18106
+	https://github.com/nanotube/supybot-bitcoin-marketmonitor/blob/master/GPG/local/bitcoinsig.py
+
+	 with the signature and the message that was signed, and the knowledge of the curve,
+	 it is possible to generate two public keys; one of which will be the public key
+	 corresponding to the private key used.
+
+	Here's how that works:
+
+	  First, you find the two points 𝑅, 𝑅′ which have the value 𝑟 as the x-coordinate 𝑟
+
+	  You also compute 𝑟−1, which is the multiplicative inverse of the value 𝑟
+	  from the signature (modulo the order of the generator of the curve).
+
+	  Then, you compute 𝑧
+	  which is the lowest 𝑛 bits of the hash of the message (where 𝑛 is the bit size of the curve).
+
+	  Then, the two public keys are 𝑟^−1(𝑠𝑅−𝑧𝐺) and 𝑟^−1(𝑠𝑅′−𝑧𝐺)
+
+	  It is easy to verify that if you plug either of these values in the ECDSA signature routines as the public keys, the signature validates.
+
+	Addendum:
+	  𝑄1=𝑟^−1(𝑠𝑅−𝑧𝐺) and 𝑄2=𝑟^−1(𝑠𝑅′−𝑧𝐺)
+	 (𝑠^−1 𝑧𝐺 + 𝑠^−1 𝑟𝑄𝑖)𝑥 = 𝑟 mod 𝑛
+	*/
+
+	coinjs.MsgSigVerify = function (message, sig, address) {
+		var hash = Crypto.SHA256(Crypto.SHA256(message,{asBytes: true}),{asBytes: true});
+		var cursor = 1;
+		var fCompressed = true;
+		var recId = sig.slice(cursor-1, cursor);
+		var rBa = sig.slice(cursor, cursor + 32);
+		cursor += rBa.length;
+		var sBa = sig.slice(cursor, cursor + 32);
+
+		// github.com/bitcoin/bips/blob/master/bip-0137.mediawiki <--- recId
+		var bip0137 = "p2pkh";
+		if (recId >= 35 && recId <= 38) {
+			recId = recId - 35;
+			bip0137 = "p2sh(p2wpkh)";
+		}
+		else if (recId >= 39 && recId <= 42) {
+			recId = recId - 39;
+			bip0137 = "p2wpkh";
+		}
+		else if (recId >= 31 && recId <= 34) {
+			recId = recId - 31;
+		}
+		else if (recId >= 27 && recId <= 30) {
+			recId = recId - 27;
+			fCompressed = false;  // this is the only case uncompressed keys are used
+		}
+
+		var r = BigInteger.fromByteArrayUnsigned(rBa);
+		var s = BigInteger.fromByteArrayUnsigned(sBa);
+		var ecparams = EllipticCurve.getSECCurveByName("secp256k1");
+		var curve = ecparams.getCurve();
+		var n = ecparams.getN();
+		var G = ecparams.getG();
+		// 1.1 x = r + jn
+		var x = r;
+		// 1.3 convert x to a point on the curve
+		var R1 = curve.decompressPoint(recId, x);
+		var R2 = R1.negate();
+		// 1.5 compute e from M (hash done already)
+		var e = BigInteger.fromByteArrayUnsigned(hash);
+		// 1.6.1 candidate pubkey Q = r^-1 (sR - eG)
+		//var Q = r.pow(-1).multiply((s.multiply(R).subtract(e.multiply(G))));
+		var v1 = r.modInverse(n)
+		var v2 = G.multiply(e);
+		var v3 = R1.multiply(s);
+		var v4 = v3.add(v2.negate());
+		var Q = v4.multiply(v1);
+		var pubkey = Crypto.util.bytesToHex(Q.getEncoded(compressed=fCompressed));
+		if (bip0137 == "p2pkh") {
+			derivedAddress = coinjs.pubkey2address(pubkey);
+		}
+		if (bip0137 == "p2sh(p2wpkh)") {
+			derivedAddress = coinjs.segwitAddress(pubkey).address;
+		}
+		if (bip0137 == "p2wpkh") {
+			derivedAddress = coinjs.bech32Address(pubkey).address;
+		}
+		return (address==derivedAddress);
+	}
+
+
+
+
 	coinjs.verifySignature = function (hash, sig, pubkey) {
 
 		function parseSig (sig) {
@@ -1870,6 +2024,80 @@
 		return bytes;		
 	}
 
+	/**
+	*
+	*  Base64 encode / decode
+	*  http://www.webtoolkit.info/
+	*
+	**/
+
+
+	// private property
+
+	// public method for encoding
+	coinjs.base64encode = function (input) {
+		var _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
+		var output = "";
+		var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
+		var i = 0;
+
+		//input = Base64._utf8_encode(input);
+
+		while (i < input.length) {
+
+		    chr1 = input[i++]; //.charCodeAt(i++);
+		    chr2 = input[i++]; //.charCodeAt(i++);
+		    chr3 = input[i++]; //.charCodeAt(i++);
+
+		    enc1 = chr1 >> 2;
+		    enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
+		    enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
+		    enc4 = chr3 & 63;
+
+		    if (isNaN(chr2)) {
+		        enc3 = enc4 = 64;
+		    } else if (isNaN(chr3)) {
+		        enc4 = 64;
+		    }
+
+		    output = output +
+		    _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +
+		    _keyStr.charAt(enc3) + _keyStr.charAt(enc4);
+		}
+		return output;
+	},
+
+	// public method for decoding
+	coinjs.base64decode = function (input) {
+		var _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
+		var output = [];
+		var chr1, chr2, chr3;
+		var enc1, enc2, enc3, enc4;
+		var i = 0;
+
+		 while (i < input.length) {
+
+		    enc1 = _keyStr.indexOf(input.charAt(i++));
+		    enc2 = _keyStr.indexOf(input.charAt(i++));
+		    enc3 = _keyStr.indexOf(input.charAt(i++));
+		    enc4 = _keyStr.indexOf(input.charAt(i++));
+
+		    chr1 = (enc1 << 2) | (enc2 >> 4);
+		    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
+		    chr3 = ((enc3 & 3) << 6) | enc4;
+
+		    output.push(chr1);
+
+		    if (enc3 != 64) {
+		        output.push(chr2);
+		    }
+		    if (enc4 != 64) {
+		        output.push(chr3);
+		    }
+		}
+		return output;
+	}
+
 	/* raw ajax function to avoid needing bigger frame works like jquery, mootools etc */
 	coinjs.ajax = function(u, f, m, a){
 		var x = false;
diff --git a/js/coinbin.js b/js/coinbin.js
index 6a42fdda..4d5101be 100644
--- a/js/coinbin.js
+++ b/js/coinbin.js
@@ -911,7 +911,7 @@ $(document).ready(function() {
         // network name     "btc"           "bitcoin"       "BTC"
         // network name     "ltc"           "litecoin"      "LTC"
         // network name     "doge"          "dogecoin"      "DOGE"
-
+        debugger;
 		if(host=='chain.so_bitcoinmainnet'){
 			listUnspentChainso(redeem, "BTC");
         } else if(host=='chain.so_litecoin'){
@@ -1411,25 +1411,99 @@ $(document).ready(function() {
 	}
 
 
+	$("#chkVerifyMessage").click(function(){
+		if($(this).is(":checked")){
+			$("#verifyMessageData").removeClass("hidden");
+		} else {
+			$("#verifyMessageData").addClass("hidden");
+		}	
+	});
+
+	$("#chkSignMessage").click(function(){
+		if($(this).is(":checked")){
+			$("#signMessageData").removeClass("hidden");
+		} else {
+			$("#signMessageData").addClass("hidden");
+		}	
+	});
 
 
-	/* verify script code */
+	/* sign message code */
+	function signMessage() {
+		var rawmessage = $("#signTransaction").val();
+		var wif = $("#signPrivateKey").val();
+		if (wif.length == 0) {
+			alert("Enter the WIF key to sign.");
+		} else {
+			try {
+				var bip0137 = $("#sigAddressType option:selected").html();
+				var messageToSign = formatSigningMessage(rawmessage);
+				var sigArr = coinjs.MsgSig(wif, messageToSign, bip0137);
+				var sigB64 = coinjs.base64encode(sigArr.signature);
+				$("#newSignSig").val(sigB64);
+				$("#newSignPub").val(sigArr.address.address);
+			} catch(e) {
+				console.log(e);
+			}
+		}
+	}
+
+	/* verify message code */
+	function verifySignedMessage() {
+		var rawmessage = $("#verifyScript").val();
+		var messageToSign = formatSigningMessage(rawmessage);
+		var sigB64 = $("#verifyMessageData .signature").val();
+		var w2address = $("#verifyMessageData .address").val();
+		var sigB64b = coinjs.base64decode(sigB64);
+		var sigB64t = Crypto.util.bytesToHex(sigB64b);
+		if (coinjs.MsgSigVerify(messageToSign, sigB64b, w2address)) {
+			alert("message verified!"); }
+		else {
+			alert("message NOT verified!"); }
+	}
+
+	// signed messages predefined format, eg: "[varint]Bitcoin Signed Message:\n[varint][message]"
+	function formatSigningMessage(postfix) {
+		var messageToSign = [];
+		var prefix = "Signed Message:\n";
+		if (coinjs.network.indexOf("bitcoin")>=0)    { prefix = "Bitcoin " + prefix; }
+		if (coinjs.network.indexOf("litecoin")>=0)   { prefix = "Litecoin " + prefix; }
+		if (coinjs.network.indexOf("dogecoin")>=0)   { prefix = "Dogecoin " + prefix; }
+		if (coinjs.network.indexOf("carboncoin")>=0) { prefix = "Carboncoin " + prefix; }
+		if (coinjs.network.indexOf("shadowcash")>=0) { prefix = "Shadowcash " + prefix; }
+		messageToSign = messageToSign.concat(coinjs.numToVarInt(prefix.length));
+		messageToSign = messageToSign.concat(prefix.split(''));
+		messageToSign = messageToSign.concat(coinjs.numToVarInt(postfix.length));
+		messageToSign = messageToSign.concat(postfix.split(''));
+		for (i=0; i < messageToSign.length; i++) {
+			if (typeof messageToSign[i] === 'string') {
+				messageToSign[i] = messageToSign[i].charCodeAt(0);
+			}
+		}
+		return messageToSign;
+	}
 
+
+	/* verify script code */
 	$("#verifyBtn").click(function(){
-		$(".verifyData").addClass("hidden");
 		$("#verifyStatus").hide();
-		if(!decodeRedeemScript()){
-			if(!decodeTransactionScript()){
-				if(!decodePrivKey()){
-					if(!decodePubKey()){
-						if(!decodeHDaddress()){
-							$("#verifyStatus").removeClass('hidden').fadeOut().fadeIn();
+		if($("#chkVerifyMessage").is(":checked")){
+			verifySignedMessage();
+		}
+		else {
+			$(".verifyData").addClass("hidden");
+			if(!decodeRedeemScript()){
+				if(!decodeTransactionScript()){
+					if(!decodePrivKey()){
+						if(!decodePubKey()){
+							if(!decodeHDaddress()){
+								$("#verifyStatus").removeClass('hidden').fadeOut().fadeIn();
+							}
 						}
 					}
 				}
 			}
 		}
-
 	});
 
 	function decodeRedeemScript(){
@@ -1676,37 +1750,42 @@ $(document).ready(function() {
 	/* sign code */
 
 	$("#signBtn").click(function(){
-		var wifkey = $("#signPrivateKey");
-		var script = $("#signTransaction");
-
-		if(coinjs.addressDecode(wifkey.val())){
-			$(wifkey).parent().removeClass('has-error');
-		} else {
-			$(wifkey).parent().addClass('has-error');
+		if($("#chkSignMessage").is(":checked")){
+			var signed = signMessage();
 		}
+		else {
+			var wifkey = $("#signPrivateKey");
+			var script = $("#signTransaction");
 
-		if((script.val()).match(/^[a-f0-9]+$/ig)){
-			$(script).parent().removeClass('has-error');
-		} else {
-			$(script).parent().addClass('has-error');
-		}
+			if(coinjs.addressDecode(wifkey.val())){
+				$(wifkey).parent().removeClass('has-error');
+			} else {
+				$(wifkey).parent().addClass('has-error');
+			}
 
-		if($("#sign .has-error").length==0){
-			$("#signedDataError").addClass('hidden');
-			try {
-				var tx = coinjs.transaction();
-				var t = tx.deserialize(script.val());
+			if((script.val()).match(/^[a-f0-9]+$/ig)){
+				$(script).parent().removeClass('has-error');
+			} else {
+				$(script).parent().addClass('has-error');
+			}
 
-				var signed = t.sign(wifkey.val(), $("#sighashType option:selected").val());
-				$("#signedData textarea").val(signed);
-				$("#signedData .txSize").html(t.size());
-				$("#signedData").removeClass('hidden').fadeIn();
-			} catch(e) {
-				// console.log(e);
+			if($("#sign .has-error").length==0){
+				$("#signedDataError").addClass('hidden');
+				try {
+					var tx = coinjs.transaction();
+					var t = tx.deserialize(script.val());
+
+					var signed = t.sign(wifkey.val(), $("#sighashType option:selected").val());
+					$("#signedData textarea").val(signed);
+					$("#signedData .txSize").html(t.size());
+					$("#signedData").removeClass('hidden').fadeIn();
+				} catch(e) {
+					// console.log(e);
+				}
+			} else {
+				$("#signedDataError").removeClass('hidden');
+				$("#signedData").addClass('hidden');
 			}
-		} else {
-			$("#signedDataError").removeClass('hidden');
-			$("#signedData").addClass('hidden');
 		}
 	});
 
@@ -1724,6 +1803,16 @@ $(document).ready(function() {
 		}
 	});
 
+	$("#verifyAdvancedCollapse").click(function(){
+		if($("#verifyAdvanced").hasClass('hidden')){
+			$("span",this).removeClass('glyphicon-collapse-down').addClass('glyphicon-collapse-up');
+			$("#verifyAdvanced").removeClass("hidden");
+		} else {
+			$("span",this).removeClass('glyphicon-collapse-up').addClass('glyphicon-collapse-down');
+			$("#verifyAdvanced").addClass("hidden");
+		}
+	});
+
 	/* page load code */
 
 	function _get(value) {
@@ -1848,6 +1937,7 @@ $(document).ready(function() {
 
 		if($("#settings .has-error").length==0){
 
+			coinjs.network =  $("#coinjs_network").val();
 			coinjs.pub =  $("#coinjs_pub").val()*1;
 			coinjs.priv =  $("#coinjs_priv").val()*1;
 			coinjs.multisig =  $("#coinjs_multisig").val()*1;
@@ -1874,6 +1964,7 @@ $(document).ready(function() {
 
 	$("#coinjs_coin").change(function(){
 
+		var network = ($("option:selected",this).attr("value")).split(";");
 		var o = ($("option:selected",this).attr("rel")).split(";");
 
 		// deal with broadcasting settings
@@ -1895,6 +1986,7 @@ $(document).ready(function() {
 		}
 
 		// deal with the reset
+		$("#coinjs_network").val(network);
 		$("#coinjs_pub").val(o[0]);
 		$("#coinjs_priv").val(o[1]);
 		$("#coinjs_multisig").val(o[2]);

From 440ad31ffc7e07f42e10003676dff73607533793 Mon Sep 17 00:00:00 2001
From: Wowee0 <co81407@coxj.com>
Date: Thu, 14 Nov 2019 12:40:29 -0600
Subject: [PATCH 16/16] fix mismatched div

---
 index.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/index.html b/index.html
index 93e7f0a5..6667c3b7 100644
--- a/index.html
+++ b/index.html
@@ -1333,6 +1333,7 @@ <h2>Sign Transaction <small>once a transaction has been verified</small></h2>
 									<br />
 									<br />
 									<br />
+									</div>
 								</div>
 							</div>
 

